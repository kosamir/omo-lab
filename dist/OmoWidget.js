!function(e){var n={};function o(t){if(n[t])return n[t].exports;var a=n[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,o),a.l=!0,a.exports}o.m=e,o.c=n,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,n){if(1&n&&(e=o(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)o.d(t,a,function(n){return e[n]}.bind(null,a));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="",o(o.s=38)}([function(e,n,o){(function(e){var t=this;n.IMPORTANT_ELEMENTS_SELECTOR='*:not(img):not(:empty):not([aria-hidden="true"]):not([class*="icon"])';var a="omolab-w-body-".concat(Date.now(),"-").concat(Math.ceil(1e3*Math.random()));n.OMOLAB_BODY_CLASS=a;n.OMO_WIDGET_COOKIE="omolab-w-cookie";n.BODY_FONT_FAMILY,n.HEADER_STYLE_ELEMENTS=void 0,n.CUSTOM_HEADER_STYLE_ELEMENTS=void 0;var r=function(e){return"".concat(e,"px")},i=function(e){console.log("inverseFontFaceColor:"+e);var n="";return void 0!==e&&"#231F20"===e.trim()&&(n="color:white !important;"),n};n.transformHeaderStyles=function(e){return e.map((function(e){return"body.".concat(a," ").concat(e,", body.").concat(a," ").concat(e," * ")}))},n.setHeaderStyle=function(e,n,o,a,s,c,f){return"".concat(e,"{ \n    font-family:").concat(n," !important; \n    font-size:").concat(r(a||t.HEADER_FONT_SIZE)," !important; \n    font-weight:").concat(o," !important;\n    letter-spacing:").concat(r(s||t.HEADER_FONT_SPACING)," !important; \n    line-height:").concat(c||t.HEADER_LINE_HEIGHT," !important;\n    ").concat(i(f),"}\n")},n.OMO_WIDGET_ELEMENTS=void 0;var s=function(e){return e.map((function(e){return"body.".concat(a," ").concat(e)}))};n.omoWidgetStyle="{ color:black }\n";n.setOmoWidgetStyle=function(e,n){return"".concat(s(e).join(",")," ").concat(n)};n.TWEAK=function(){return(e=a,n=t.ELEMENTS_TO_TWEAK_STYLE,o=[],n.forEach((function(n){o.push("body.".concat(e," ").concat(n.element," {").concat(n.style,"}"))})),o).join(",").replace(",","\n");var e,n,o},n.BODY_STYLE=void 0;n.setBodyTextStyle=function(e,n,o,a,c,f,l){return n?"".concat(s(e).join(","),"{ \n    font-family:").concat(n," !important; \n    font-size:").concat(r(a||t.BODY_FONT_SIZE)," !important; \n    font-weight:").concat(o," !important;\n    letter-spacing:").concat(r(c||t.BODY_FONT_SPACING)," !important; \n    line-height:").concat(f||t.BODY_LINE_HEIGHT," !important; \n    ").concat(i(l),"}\n"):""},n.BACKGROUND_COLOR_ELEMENTS=void 0;n.setBackGroundColor=function(e,n){return n?"".concat(s(e).join(",")," { background-color: ").concat(n," !important; ").concat(i(n),"}\n"):""};var c=o(16);n.readConfigurationFromFile=function(n){return new e((function(e,o){c.get(n).then((function(n){if(200!==n.status)throw Error(n.statusText);var o=n.data;if(t.BODY_FONT_FAMILY=o.BODY_FONT_FAMILY||"Roboto",t.HEADER_FONT_FAMILY=o.HEADER_FONT_FAMILY||"Roboto",t.HEADER_STYLE_ELEMENTS=o.HEADER_STYLE_ELEMENTS,t.CUSTOM_HEADER_STYLE_ELEMENTS=o.CUSTOM_HEADER_STYLE_ELEMENTS,t.OMO_WIDGET_ELEMENTS=o.OMO_WIDGET_ELEMENTS,t.ELEMENTS_TO_TWEAK_STYLE=o.ELEMENTS_TO_TWEAK_STYLE,t.BODY_STYLE=o.BODY_STYLE,t.BACKGROUND_COLOR_ELEMENTS=o.BACKGROUND_COLOR_ELEMENTS,t.HEADER_LINE_HEIGHT=o.HEADER_LINE_HEIGHT||0,t.HEADER_FONT_SPACING=o.HEADER_FONT_SPACING||20,t.HEADER_FONT_SIZE=o.HEADER_FONT_SIZE||20,t.BODY_LINE_HEIGHT=o.BODY_LINE_HEIGHT||0,t.BODY_LINE_HEIGHT_MAX=o.BODY_LINE_HEIGHT_MAX||40,t.BODY_FONT_SPACING=o.BODY_FONT_SPACING||0,t.BODY_FONT_SIZE=o.BODY_FONT_SIZE||13,t.BODY_FONT_SIZE_MAX=o.BODY_FONT_SIZE_MAX||30,t.BODY_FONT_WEIGHT=o.BODY_FONT_WEIGHT||"normal",t.DEFAULT_BACKGROUND=o.DEFAULT_BACKGROUND||"transparent",-1!==[t.HEADER_STYLE_ELEMENTS,t.BODY_STYLE,t.BACKGROUND_COLOR_ELEMENTS,t.OMO_WIDGET_ELEMENTS,t.CUSTOM_HEADER_STYLE_ELEMENTS].indexOf(void 0))throw Error("HEADER_STYLE_ELEMENTS,CUSTOM_HEADER_STYLE_ELEMENTS, OMO_WIDGET_ELEMENTS,BODY_STYLE, BACKGROUND_COLOR_ELEMENTS are mandatory!!!");e("FINISHED LOADING STYLESHEET")})).catch((function(e){o("".concat(e," in file ").concat(n))}))}))}}).call(this,o(2))},function(e,n,o){"use strict";var t=o(4),a=Object.prototype.toString;function r(e){return"[object Array]"===a.call(e)}function i(e){return void 0===e}function s(e){return null!==e&&"object"==typeof e}function c(e){return"[object Function]"===a.call(e)}function f(e,n){if(null!=e)if("object"!=typeof e&&(e=[e]),r(e))for(var o=0,t=e.length;o<t;o++)n.call(null,e[o],o,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.call(null,e[a],a,e)}e.exports={isArray:r,isArrayBuffer:function(e){return"[object ArrayBuffer]"===a.call(e)},isBuffer:function(e){return null!==e&&!i(e)&&null!==e.constructor&&!i(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isUndefined:i,isDate:function(e){return"[object Date]"===a.call(e)},isFile:function(e){return"[object File]"===a.call(e)},isBlob:function(e){return"[object Blob]"===a.call(e)},isFunction:c,isStream:function(e){return s(e)&&c(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:f,merge:function e(){var n={};function o(o,t){"object"==typeof n[t]&&"object"==typeof o?n[t]=e(n[t],o):n[t]=o}for(var t=0,a=arguments.length;t<a;t++)f(arguments[t],o);return n},deepMerge:function e(){var n={};function o(o,t){"object"==typeof n[t]&&"object"==typeof o?n[t]=e(n[t],o):n[t]="object"==typeof o?e({},o):o}for(var t=0,a=arguments.length;t<a;t++)f(arguments[t],o);return n},extend:function(e,n,o){return f(n,(function(n,a){e[a]=o&&"function"==typeof n?t(n,o):n})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(e,n,o){e.exports=o(13).Promise},function(e,n){var o,t,a=e.exports={};function r(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function s(e){if(o===setTimeout)return setTimeout(e,0);if((o===r||!o)&&setTimeout)return o=setTimeout,setTimeout(e,0);try{return o(e,0)}catch(n){try{return o.call(null,e,0)}catch(n){return o.call(this,e,0)}}}!function(){try{o="function"==typeof setTimeout?setTimeout:r}catch(e){o=r}try{t="function"==typeof clearTimeout?clearTimeout:i}catch(e){t=i}}();var c,f=[],l=!1,u=-1;function p(){l&&c&&(l=!1,c.length?f=c.concat(f):u=-1,f.length&&m())}function m(){if(!l){var e=s(p);l=!0;for(var n=f.length;n;){for(c=f,f=[];++u<n;)c&&c[u].run();u=-1,n=f.length}c=null,l=!1,function(e){if(t===clearTimeout)return clearTimeout(e);if((t===i||!t)&&clearTimeout)return t=clearTimeout,clearTimeout(e);try{t(e)}catch(n){try{return t.call(null,e)}catch(n){return t.call(this,e)}}}(e)}}function d(e,n){this.fun=e,this.array=n}function g(){}a.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var o=1;o<arguments.length;o++)n[o-1]=arguments[o];f.push(new d(e,n)),1!==f.length||l||s(m)},d.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=g,a.addListener=g,a.once=g,a.off=g,a.removeListener=g,a.removeAllListeners=g,a.emit=g,a.prependListener=g,a.prependOnceListener=g,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,n,o){"use strict";e.exports=function(e,n){return function(){for(var o=new Array(arguments.length),t=0;t<o.length;t++)o[t]=arguments[t];return e.apply(n,o)}}},function(e,n,o){"use strict";var t=o(1);function a(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,n,o){if(!n)return e;var r;if(o)r=o(n);else if(t.isURLSearchParams(n))r=n.toString();else{var i=[];t.forEach(n,(function(e,n){null!=e&&(t.isArray(e)?n+="[]":e=[e],t.forEach(e,(function(e){t.isDate(e)?e=e.toISOString():t.isObject(e)&&(e=JSON.stringify(e)),i.push(a(n)+"="+a(e))})))})),r=i.join("&")}if(r){var s=e.indexOf("#");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf("?")?"?":"&")+r}return e}},function(e,n,o){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,n,o){"use strict";(function(n){var t=o(1),a=o(22),r={"Content-Type":"application/x-www-form-urlencoded"};function i(e,n){!t.isUndefined(e)&&t.isUndefined(e["Content-Type"])&&(e["Content-Type"]=n)}var s,c={adapter:("undefined"!=typeof XMLHttpRequest?s=o(8):void 0!==n&&"[object process]"===Object.prototype.toString.call(n)&&(s=o(8)),s),transformRequest:[function(e,n){return a(n,"Accept"),a(n,"Content-Type"),t.isFormData(e)||t.isArrayBuffer(e)||t.isBuffer(e)||t.isStream(e)||t.isFile(e)||t.isBlob(e)?e:t.isArrayBufferView(e)?e.buffer:t.isURLSearchParams(e)?(i(n,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):t.isObject(e)?(i(n,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};c.headers={common:{Accept:"application/json, text/plain, */*"}},t.forEach(["delete","get","head"],(function(e){c.headers[e]={}})),t.forEach(["post","put","patch"],(function(e){c.headers[e]=t.merge(r)})),e.exports=c}).call(this,o(3))},function(e,n,o){"use strict";(function(n){var t=o(1),a=o(23),r=o(5),i=o(25),s=o(28),c=o(29),f=o(9);e.exports=function(e){return new n((function(n,l){var u=e.data,p=e.headers;t.isFormData(u)&&delete p["Content-Type"];var m=new XMLHttpRequest;if(e.auth){var d=e.auth.username||"",g=e.auth.password||"";p.Authorization="Basic "+btoa(d+":"+g)}var h=i(e.baseURL,e.url);if(m.open(e.method.toUpperCase(),r(h,e.params,e.paramsSerializer),!0),m.timeout=e.timeout,m.onreadystatechange=function(){if(m&&4===m.readyState&&(0!==m.status||m.responseURL&&0===m.responseURL.indexOf("file:"))){var o="getAllResponseHeaders"in m?s(m.getAllResponseHeaders()):null,t={data:e.responseType&&"text"!==e.responseType?m.response:m.responseText,status:m.status,statusText:m.statusText,headers:o,config:e,request:m};a(n,l,t),m=null}},m.onabort=function(){m&&(l(f("Request aborted",e,"ECONNABORTED",m)),m=null)},m.onerror=function(){l(f("Network Error",e,null,m)),m=null},m.ontimeout=function(){var n="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(n=e.timeoutErrorMessage),l(f(n,e,"ECONNABORTED",m)),m=null},t.isStandardBrowserEnv()){var w=o(30),v=(e.withCredentials||c(h))&&e.xsrfCookieName?w.read(e.xsrfCookieName):void 0;v&&(p[e.xsrfHeaderName]=v)}if("setRequestHeader"in m&&t.forEach(p,(function(e,n){void 0===u&&"content-type"===n.toLowerCase()?delete p[n]:m.setRequestHeader(n,e)})),t.isUndefined(e.withCredentials)||(m.withCredentials=!!e.withCredentials),e.responseType)try{m.responseType=e.responseType}catch(n){if("json"!==e.responseType)throw n}"function"==typeof e.onDownloadProgress&&m.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&m.upload&&m.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){m&&(m.abort(),l(e),m=null)})),void 0===u&&(u=null),m.send(u)}))}}).call(this,o(2))},function(e,n,o){"use strict";var t=o(24);e.exports=function(e,n,o,a,r){var i=new Error(e);return t(i,n,o,a,r)}},function(e,n,o){"use strict";var t=o(1);e.exports=function(e,n){n=n||{};var o={},a=["url","method","params","data"],r=["headers","auth","proxy"],i=["baseURL","url","transformRequest","transformResponse","paramsSerializer","timeout","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","maxContentLength","validateStatus","maxRedirects","httpAgent","httpsAgent","cancelToken","socketPath"];t.forEach(a,(function(e){void 0!==n[e]&&(o[e]=n[e])})),t.forEach(r,(function(a){t.isObject(n[a])?o[a]=t.deepMerge(e[a],n[a]):void 0!==n[a]?o[a]=n[a]:t.isObject(e[a])?o[a]=t.deepMerge(e[a]):void 0!==e[a]&&(o[a]=e[a])})),t.forEach(i,(function(t){void 0!==n[t]?o[t]=n[t]:void 0!==e[t]&&(o[t]=e[t])}));var s=a.concat(r).concat(i),c=Object.keys(n).filter((function(e){return-1===s.indexOf(e)}));return t.forEach(c,(function(t){void 0!==n[t]?o[t]=n[t]:void 0!==e[t]&&(o[t]=e[t])})),o}},function(e,n,o){"use strict";function t(e){this.message=e}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,e.exports=t},function(e,n){e.exports='<!DOCTYPE html>\n<html lang="en">\n\n<head>\n  <meta charset="UTF-8" />\n  <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n  <meta http-equiv="X-UA-Compatible" content="IE=11" />\n  <title>Omo</title>\n  \x3c!-- <link rel="stylesheet" href="/totemWidget.css" /> --\x3e\n</head>\n\n<body>\n  <div id="omo-widget" class="omo-widget">\n    <input type="checkbox" name="main-toggle" class="omo-widget__main-toggle" title="Open options" />\n    <fieldset data-setting-name="font-size">\n      <legend>Font size</legend>\n      <input type="radio" class="omo-widget__toggle-options" aria-selected="false" name="option-opened" value="1"\n        title="Font Size" />\n      \x3c!-- <svg width="32" height="27" xmlns="http://www.w3.org/2000/svg">\n          <g id="font-size" fill="var(--svgFill)" fill-rule="evenodd">\n            <path\n              d="M1.639 8.868h13.943c.197 0 .375.078.537.227a.74.74 0 01.24.55c0 .25-.081.454-.24.614a.74.74 0 01-.537.243H9.508v14.744a.906.906 0 01-.267.631.855.855 0 01-.643.28c-.284 0-.518-.092-.695-.28a.892.892 0 01-.27-.63V10.501H1.639a.764.764 0 01-.574-.229.773.773 0 01-.23-.574c0-.232.077-.43.23-.588a.75.75 0 01.574-.243"\n            />\n            <path\n              d="M9.661.224h20.914c.295 0 .562.113.802.342.242.227.363.501.363.822 0 .376-.12.683-.363.923-.24.242-.507.36-.802.36h-9.114v22.123c0 .347-.133.66-.4.94a1.277 1.277 0 01-.964.422c-.427 0-.777-.14-1.042-.422-.269-.28-.404-.593-.404-.94V2.67h-8.99c-.349 0-.638-.11-.864-.337a1.182 1.182 0 01-.34-.865c0-.347.114-.643.34-.882.226-.243.515-.362.864-.362"\n            />\n          </g>\n        </svg> --\x3e\n\n      <svg viewBox="0 0 32 27">\n        <g id="font-size" fill="var(--svgFill)" fill-rule="evenodd">\n          <path\n            d="M1.639 8.868h13.943c.197 0 .375.078.537.227a.74.74 0 01.24.55c0 .25-.081.454-.24.614a.74.74 0 01-.537.243H9.508v14.744a.906.906 0 01-.267.631.855.855 0 01-.643.28c-.284 0-.518-.092-.695-.28a.892.892 0 01-.27-.63V10.501H1.639a.764.764 0 01-.574-.229.773.773 0 01-.23-.574c0-.232.077-.43.23-.588a.75.75 0 01.574-.243" />\n          <path\n            d="M9.661.224h20.914c.295 0 .562.113.802.342.242.227.363.501.363.822 0 .376-.12.683-.363.923-.24.242-.507.36-.802.36h-9.114v22.123c0 .347-.133.66-.4.94a1.277 1.277 0 01-.964.422c-.427 0-.777-.14-1.042-.422-.269-.28-.404-.593-.404-.94V2.67h-8.99c-.349 0-.638-.11-.864-.337a1.182 1.182 0 01-.34-.865c0-.347.114-.643.34-.882.226-.243.515-.362.864-.362" />\n        </g>\n      </svg>\n      <form action="#">\n        <button type="reset" class="omo-widget__reset">\n          \x3c!-- <svg width="23" height="25" xmlns="http://www.w3.org/2000/svg">\n              <path\n                id="reset"\n                fill="var(--svgFill)"\n                d="M6 3C5.3 2.3 4.6 1.5 3.7.6c-.2 2.5-.4 4.9-.7 7.3 2.6.1 5 .2 7.7.2-.9-1-1.7-1.8-2.5-2.7 2.6-1.4 6.5-.7 8.9 1.6 2.7 2.5 3.4 6.5 1.9 9.7-1.6 3.2-5.2 5.1-8.7 4.6-3.1-.5-6.8-3.1-7.1-8.2h-3c-.3 3.5 2.1 8.2 6.4 10.2 4.6 2.2 10.3 1 13.6-2.8 3.4-4.1 3.7-9.7.6-14C18.3 2.8 12.5-.2 6 3z"\n                fill-rule="nonzero"\n              />\n            </svg> --\x3e\n          <svg viewBox="0 0 25 25">\n            <path id="reset" fill="var(--svgFill)"\n              d="M6 3C5.3 2.3 4.6 1.5 3.7.6c-.2 2.5-.4 4.9-.7 7.3 2.6.1 5 .2 7.7.2-.9-1-1.7-1.8-2.5-2.7 2.6-1.4 6.5-.7 8.9 1.6 2.7 2.5 3.4 6.5 1.9 9.7-1.6 3.2-5.2 5.1-8.7 4.6-3.1-.5-6.8-3.1-7.1-8.2h-3c-.3 3.5 2.1 8.2 6.4 10.2 4.6 2.2 10.3 1 13.6-2.8 3.4-4.1 3.7-9.7.6-14C18.3 2.8 12.5-.2 6 3z"\n              fill-rule="nonzero" />\n          </svg>\n        </button>\n        <button type="button" tabindex="-1" class="omo-widget__add">+</button>\n        <button type="button" tabindex="-1" class="omo-widget__substract">\n          -\n        </button>\n        <input id="totem_bsize" type="number" class="omo-widget__option-value" value="0" min="1" max="30"\n          name="totem_bsize" required />\n      </form>\n    </fieldset>\n    <fieldset data-setting-name="font-type">\n      <legend>Font type</legend>\n      <input type="radio" class="omo-widget__toggle-options" aria-selected="false" name="option-opened" value="2"\n        title="Font Type" />\n      <svg viewBox="0 0 27 32">\n        <g fill="none" fill-rule="evenodd">\n          <path\n            d="M23.981 15.832c0-5.713-3.03-10.984-9.912-10.984-6.85 0-10.04 5.43-10.04 10.984 0 5.842 3.663 11.02 10.104 11.02 6.218 0 9.848-5.178 9.848-11.02m2.937-.062c0 7.545-5.02 13.575-12.818 13.575-7.828 0-12.974-6.062-12.974-13.575 0-6.44 4.324-13.417 13.007-13.417 8.838 0 12.785 6.85 12.785 13.417"\n            fill="var(--svgFill)" fill-rule="nonzero" />\n          <path d="M0 0h27v32H0z" />\n        </g>\n      </svg>\n      \x3c!-- <svg id="O" width="27" height="32" xmlns="http://www.w3.org/2000/svg">\n          <g fill="none" fill-rule="evenodd">\n            <path\n              d="M23.981 15.832c0-5.713-3.03-10.984-9.912-10.984-6.85 0-10.04 5.43-10.04 10.984 0 5.842 3.663 11.02 10.104 11.02 6.218 0 9.848-5.178 9.848-11.02m2.937-.062c0 7.545-5.02 13.575-12.818 13.575-7.828 0-12.974-6.062-12.974-13.575 0-6.44 4.324-13.417 13.007-13.417 8.838 0 12.785 6.85 12.785 13.417"\n              fill="var(--svgFill)"\n              fill-rule="nonzero"\n            />\n            <path d="M0 0h27v32H0z" />\n          </g>\n        </svg> --\x3e\n      <form action="#">\n        <button type="reset" class="omo-widget__reset" id="totem_body_ff_reset">\n          \x3c!-- <svg width="23" height="25" xmlns="http://www.w3.org/2000/svg">\n              <path\n                id="reset"\n                fill="var(--svgFill)"\n                d="M6 3C5.3 2.3 4.6 1.5 3.7.6c-.2 2.5-.4 4.9-.7 7.3 2.6.1 5 .2 7.7.2-.9-1-1.7-1.8-2.5-2.7 2.6-1.4 6.5-.7 8.9 1.6 2.7 2.5 3.4 6.5 1.9 9.7-1.6 3.2-5.2 5.1-8.7 4.6-3.1-.5-6.8-3.1-7.1-8.2h-3c-.3 3.5 2.1 8.2 6.4 10.2 4.6 2.2 10.3 1 13.6-2.8 3.4-4.1 3.7-9.7.6-14C18.3 2.8 12.5-.2 6 3z"\n                fill-rule="nonzero"\n              />\n            </svg> --\x3e\n\n          <svg viewBox="0 0 25 25">\n            <path id="reset" fill="var(--svgFill)"\n              d="M6 3C5.3 2.3 4.6 1.5 3.7.6c-.2 2.5-.4 4.9-.7 7.3 2.6.1 5 .2 7.7.2-.9-1-1.7-1.8-2.5-2.7 2.6-1.4 6.5-.7 8.9 1.6 2.7 2.5 3.4 6.5 1.9 9.7-1.6 3.2-5.2 5.1-8.7 4.6-3.1-.5-6.8-3.1-7.1-8.2h-3c-.3 3.5 2.1 8.2 6.4 10.2 4.6 2.2 10.3 1 13.6-2.8 3.4-4.1 3.7-9.7.6-14C18.3 2.8 12.5-.2 6 3z"\n              fill-rule="nonzero" />\n          </svg>\n        </button>\n        <button type="button" tabindex="-1" class="omo-widget__add">+</button>\n        <div class="omo-widget__type-preview">\n          <svg viewBox="0 0 27 32">\n            <g fill="none" fill-rule="evenodd">\n              <path\n                d="M23.981 15.832c0-5.713-3.03-10.984-9.912-10.984-6.85 0-10.04 5.43-10.04 10.984 0 5.842 3.663 11.02 10.104 11.02 6.218 0 9.848-5.178 9.848-11.02m2.937-.062c0 7.545-5.02 13.575-12.818 13.575-7.828 0-12.974-6.062-12.974-13.575 0-6.44 4.324-13.417 13.007-13.417 8.838 0 12.785 6.85 12.785 13.417"\n                fill="var(--svgFill)" fill-rule="nonzero" />\n              <path d="M0 0h27v32H0z" />\n            </g>\n          </svg>\n\n          \x3c!-- <svg\n              id="O"\n              width="27"\n              height="32"\n              xmlns="http://www.w3.org/2000/svg"\n            >\n              <g fill="none" fill-rule="evenodd">\n                <path\n                  d="M23.981 15.832c0-5.713-3.03-10.984-9.912-10.984-6.85 0-10.04 5.43-10.04 10.984 0 5.842 3.663 11.02 10.104 11.02 6.218 0 9.848-5.178 9.848-11.02m2.937-.062c0 7.545-5.02 13.575-12.818 13.575-7.828 0-12.974-6.062-12.974-13.575 0-6.44 4.324-13.417 13.007-13.417 8.838 0 12.785 6.85 12.785 13.417"\n                  fill="var(--svgFill)"\n                  fill-rule="nonzero"\n                />\n                <path d="M0 0h27v32H0z" />\n              </g>\n            </svg> --\x3e\n          <svg viewBox="0 0 27 32">\n            <g fill="none" fill-rule="evenodd">\n              <path\n                d="M2.022 29.984c-.899-.323-1.224-1.08-.899-2.051 2.52-8.855 5.724-17.854 9.395-26.133C11.022.72 11.85 0 13.182 0s2.195.72 2.7 1.8c3.6 7.919 7.055 16.954 9.574 25.917.252 1.008.036 1.944-1.08 2.268-.828.217-1.69 0-2.088-1.188a217.784 217.784 0 00-1.943-6.407H6.162c-.647 2.088-1.26 4.14-1.87 6.228-.36 1.259-1.262 1.69-2.27 1.366zm5.04-10.33H19.41a226.489 226.489 0 00-6.228-16.378c-2.303 5.255-4.319 10.798-6.119 16.378z"\n                fill="var(--svgFill)" fill-rule="nonzero" />\n              <path d="M0 0h27v32H0z" />\n            </g>\n          </svg>\n\n          \x3c!-- <svg\n              id="A"\n              width="27"\n              height="32"\n              xmlns="http://www.w3.org/2000/svg"\n            >\n              <g fill="none" fill-rule="evenodd">\n                <path\n                  d="M2.022 29.984c-.899-.323-1.224-1.08-.899-2.051 2.52-8.855 5.724-17.854 9.395-26.133C11.022.72 11.85 0 13.182 0s2.195.72 2.7 1.8c3.6 7.919 7.055 16.954 9.574 25.917.252 1.008.036 1.944-1.08 2.268-.828.217-1.69 0-2.088-1.188a217.784 217.784 0 00-1.943-6.407H6.162c-.647 2.088-1.26 4.14-1.87 6.228-.36 1.259-1.262 1.69-2.27 1.366zm5.04-10.33H19.41a226.489 226.489 0 00-6.228-16.378c-2.303 5.255-4.319 10.798-6.119 16.378z"\n                  fill="var(--svgFill)"\n                  fill-rule="nonzero"\n                />\n                <path d="M0 0h27v32H0z" />\n              </g>\n            </svg> --\x3e\n          <svg viewBox="0 0 27 32">\n            <g fill="none" fill-rule="evenodd">\n              <path\n                d="M14.087 30.949H4.584C3.685 30.949 3 30.23 3 29.222V3.7C3 2.08 3.792 1 5.556 1h7.379c6.372 0 9.503 2.771 9.503 7.127 0 3.384-1.764 5.688-4.751 6.659 4.104.972 6.155 3.637 6.155 7.74 0 5.687-4.571 8.423-9.755 8.423zM6.24 13.851h6.946c3.168 0 6.012-1.476 6.012-5.436 0-3.06-2.34-4.607-6.587-4.607H6.24v10.043zm0 2.735v11.556h7.234c4.067 0 7.02-1.584 7.02-5.688 0-3.816-2.196-5.868-6.875-5.868H6.24z"\n                fill="var(--svgFill)" fill-rule="nonzero" />\n              <path d="M0 0h27v32H0z" />\n            </g>\n          </svg>\n\n          \x3c!-- <svg\n              id="B"\n              width="27"\n              height="32"\n              xmlns="http://www.w3.org/2000/svg"\n            >\n              <g fill="none" fill-rule="evenodd">\n                <path\n                  d="M14.087 30.949H4.584C3.685 30.949 3 30.23 3 29.222V3.7C3 2.08 3.792 1 5.556 1h7.379c6.372 0 9.503 2.771 9.503 7.127 0 3.384-1.764 5.688-4.751 6.659 4.104.972 6.155 3.637 6.155 7.74 0 5.687-4.571 8.423-9.755 8.423zM6.24 13.851h6.946c3.168 0 6.012-1.476 6.012-5.436 0-3.06-2.34-4.607-6.587-4.607H6.24v10.043zm0 2.735v11.556h7.234c4.067 0 7.02-1.584 7.02-5.688 0-3.816-2.196-5.868-6.875-5.868H6.24z"\n                  fill="var(--svgFill)"\n                  fill-rule="nonzero"\n                />\n                <path d="M0 0h27v32H0z" />\n              </g>\n            </svg> --\x3e\n          <svg viewBox="0 0 27 32">\n            <g fill="none" fill-rule="evenodd">\n              <path\n                d="M23.031 7.937c-1.691-3.168-4.318-4.463-8.136-4.463-7.415 0-10.942 5.507-10.942 12.67 0 7.307 3.959 12.382 10.655 12.382 4.933 0 7.235-1.8 8.495-4.104.504-.864 1.404-1.296 2.268-.899.865.396.973 1.439.576 2.159-1.619 3.456-5.363 5.688-11.376 5.688-8.53 0-13.929-6.048-13.929-15.298C.642 7.829 5.286.63 14.968.63c4.753 0 9.253 1.908 10.872 5.795.396.899.324 1.691-.469 2.195-.791.433-1.799.145-2.34-.683z"\n                fill="var(--svgFill)" fill-rule="nonzero" />\n              <path d="M0 0h27v32H0z" />\n            </g>\n          </svg>\n          \x3c!-- C iznad --\x3e\n          <svg viewBox="0 0 27 32">\n            <g fill="none" fill-rule="evenodd">\n              <path\n                d="M12.619 30.974H3.836c-1.296 0-2.268-.971-2.268-2.268V3.258c0-1.296.972-2.232 2.268-2.232h8.315c8.711 0 14.578 4.788 14.578 14.686 0 10.223-6.623 15.262-14.11 15.262zm-.864-27.141H4.809v24.333h7.343c6.983 0 11.23-4.393 11.23-12.383 0-8.062-3.995-11.95-11.627-11.95z"\n                fill="var(--svgFill)" fill-rule="nonzero" />\n              <path d="M0 0h27v32H0z" />\n            </g>\n          </svg>\n          \x3c!--D IZNAD --\x3e\n\n          <svg viewBox="0 0 27 32">\n            <g fill="none" fill-rule="evenodd">\n              <path\n                d="M22.407 31.584H5.525a2.127 2.127 0 01-2.124-2.123V3.724c0-1.152.972-2.088 2.124-2.088h16.917c.721 0 1.332.576 1.332 1.44 0 .72-.611 1.368-1.332 1.368H6.641v10.438h14.254c.756 0 1.367.576 1.367 1.404 0 .756-.611 1.404-1.367 1.404H6.641v11.087h15.766c.756 0 1.367.611 1.367 1.367 0 .829-.611 1.44-1.367 1.44z"\n                fill="var(--svgFill)" fill-rule="nonzero" />\n              <path d="M0 0h27v32H0z" />\n            </g>\n          </svg>\n          \x3c!-- E iznad --\x3e\n        </div>\n        <button type="button" tabindex="-1" class="omo-widget__substract">\n          -\n        </button>\n        <input id="totem_body_ff" type="number" class="omo-widget__option-value" value="0" min="1" max="5"\n          name="totem_body_ff" />\n      </form>\n    </fieldset>\n    <fieldset data-setting-name="font-weight">\n      <legend>Font weight</legend>\n      <input type="radio" class="omo-widget__toggle-options" aria-selected="false" name="option-opened" value="2"\n        title="Font Weight" />\n      <svg viewBox="0 0 35 24">\n        <g id="font-weight" fill="var(--svgFill)" fill-rule="evenodd">\n          <path\n            d="M2.069 12.225v9.878H7.95c3.437 0 6.073-1.361 6.073-4.94 0-3.245-1.855-4.938-5.826-4.938h-6.13zm0-1.522h5.908c2.635 0 4.965-1.251 4.965-4.553 0-2.552-1.97-3.854-5.547-3.854H2.069v8.407zm6.379 12.925H1.15a.832.832 0 01-.86-.86V2.517c0-1.055.503-1.746 1.61-1.746h5.852c4.662 0 6.992 2.106 6.992 5.379 0 2.554-1.471 4.329-3.631 5.105 3.162.72 4.713 2.747 4.713 5.908 0 4.384-3.467 6.465-7.38 6.465zM21.577 13.03v7.546h5.162c2.746 0 4.522-1.026 4.522-3.607 0-2.55-1.47-3.938-4.55-3.938h-5.134zm0-2.912h4.607c2.192 0 4.189-1 4.189-3.688 0-2.11-1.552-3.165-4.44-3.165h-4.356v6.853zm5.605 13.51H19.83c-.97 0-1.692-.831-1.692-1.968V2.795c0-1.553.75-2.58 2.442-2.58h5.465c5.215 0 7.795 2.19 7.795 5.66 0 2.663-1.193 4.437-3.69 5.215 3.162.805 4.719 2.857 4.719 6.02 0 4.409-3.553 6.519-7.688 6.519z" />\n        </g>\n      </svg>\n\n      <form action="#">\n        <button type="reset" class="omo-widget__reset">\n          <svg viewBox="0 0 25 25">\n            <path id="reset" fill="var(--svgFill)"\n              d="M6 3C5.3 2.3 4.6 1.5 3.7.6c-.2 2.5-.4 4.9-.7 7.3 2.6.1 5 .2 7.7.2-.9-1-1.7-1.8-2.5-2.7 2.6-1.4 6.5-.7 8.9 1.6 2.7 2.5 3.4 6.5 1.9 9.7-1.6 3.2-5.2 5.1-8.7 4.6-3.1-.5-6.8-3.1-7.1-8.2h-3c-.3 3.5 2.1 8.2 6.4 10.2 4.6 2.2 10.3 1 13.6-2.8 3.4-4.1 3.7-9.7.6-14C18.3 2.8 12.5-.2 6 3z"\n              fill-rule="nonzero" />\n          </svg>\n        </button>\n        <button type="button" tabindex="-1" class="omo-widget__add">+</button>\n        <button type="button" tabindex="-1" class="omo-widget__substract">\n          -\n        </button>\n        <input id="totem_font_weight" type="number" class="omo-widget__option-value" value="0" min="1" max="3"\n          name="totem_font_weight" />\n      </form>\n    </fieldset>\n    <fieldset data-setting-name="letter-spacing">\n      <legend>Letter spacing</legend>\n      <input type="radio" class="omo-widget__toggle-options" aria-selected="false" name="option-opened" value="2"\n        title="Letter spacing" />\n\n      <svg viewBox="0 0 32 27">\n        <g id="letter-spacing" fill="var(--svgFill)" fill-rule="evenodd">\n          <path\n            d="M13.92 1.11c.266.07.451.21.56.427.103.21.131.433.076.665a96.993 96.993 0 01-2.443 7.826 106.542 106.542 0 01-2.869 7.164 2.435 2.435 0 01-.664.852 1.442 1.442 0 01-.93.344c-.373 0-.696-.113-.97-.344a2.484 2.484 0 01-.65-.852A103.151 103.151 0 013.08 9.92 98.362 98.362 0 01.662 2.305a1.1 1.1 0 01.026-.715c.09-.25.274-.41.558-.48a.975.975 0 01.72.067c.246.116.405.289.475.517.692 2.48 1.457 4.954 2.3 7.416a93.749 93.749 0 002.936 7.496 122.297 122.297 0 002.843-7.428 106.317 106.317 0 002.231-7.351c.07-.265.22-.47.45-.611a.864.864 0 01.718-.105M20.827 11.502h6.883a98.56 98.56 0 00-1.621-4.387 108.366 108.366 0 00-1.86-4.384 86.47 86.47 0 00-1.82 4.412 151.602 151.602 0 00-1.582 4.36m-3.24 6.778a.756.756 0 01-.438-.438.946.946 0 01-.013-.652 126.476 126.476 0 012.52-7.803c.94-2.615 1.96-5.132 3.06-7.562.123-.283.307-.516.557-.703.247-.186.557-.278.929-.278.37 0 .682.092.93.278.248.187.44.42.586.703a91.654 91.654 0 013.12 7.39 96.531 96.531 0 012.538 7.79c.07.246.07.494 0 .741-.07.25-.24.42-.506.505a1.047 1.047 0 01-.73-.05.804.804 0 01-.492-.586 72.045 72.045 0 00-.676-2.275c-.24-.75-.484-1.508-.733-2.27h-7.943c-.23.762-.46 1.52-.69 2.27-.23.758-.462 1.513-.691 2.275a.924.924 0 01-.532.598 1.19 1.19 0 01-.796.067M31.404 22.621c-.006-.03-.006-.06-.018-.088-.007-.02-.028-.039-.04-.059-.03-.057-.06-.117-.108-.166l-3.313-3.317a.68.68 0 10-.966.963l2.153 2.156H2.932l2.153-2.156a.684.684 0 000-.963.687.687 0 00-.965 0L.803 22.308c-.047.05-.078.11-.11.166-.01.02-.028.04-.038.06-.011.026-.01.057-.016.087a.669.669 0 00.164.65l3.315 3.32a.687.687 0 00.967 0 .686.686 0 00-.004-.968l-2.15-2.15H29.11l-2.15 2.15a.685.685 0 00-.001.967.686.686 0 00.966 0l3.313-3.319a.663.663 0 00.166-.65" />\n        </g>\n      </svg>\n\n      <form action="#">\n        <button type="reset" class="omo-widget__reset">\n          <svg viewBox="0 0 25 25">\n            <path id="reset" fill="var(--svgFill)"\n              d="M6 3C5.3 2.3 4.6 1.5 3.7.6c-.2 2.5-.4 4.9-.7 7.3 2.6.1 5 .2 7.7.2-.9-1-1.7-1.8-2.5-2.7 2.6-1.4 6.5-.7 8.9 1.6 2.7 2.5 3.4 6.5 1.9 9.7-1.6 3.2-5.2 5.1-8.7 4.6-3.1-.5-6.8-3.1-7.1-8.2h-3c-.3 3.5 2.1 8.2 6.4 10.2 4.6 2.2 10.3 1 13.6-2.8 3.4-4.1 3.7-9.7.6-14C18.3 2.8 12.5-.2 6 3z"\n              fill-rule="nonzero" />\n          </svg>\n        </button>\n        <button type="button" tabindex="-1" class="omo-widget__add">+</button>\n        <button type="button" tabindex="-1" class="omo-widget__substract">\n          -\n        </button>\n        <input id="totem_bspacing" type="number" class="omo-widget__option-value" value="0" min="1" max="4"\n          name="totem_bspacing" />\n      </form>\n    </fieldset>\n    <fieldset data-setting-name="line-height">\n      <legend>Line height</legend>\n      <input type="radio" class="omo-widget__toggle-options" aria-selected="false" name="option-opened" value="3"\n        title="Line height" />\n      <svg viewBox="0 0 32 28">\n        <g id="line-height" fill="var(--svgFill)" fill-rule="evenodd">\n          <path\n            d="M30.551.92H13.317a.82.82 0 000 1.639h17.234a.819.819 0 000-1.64M30.551 26.095H13.317a.818.818 0 100 1.634h17.234a.817.817 0 100-1.634M9.147 22.359l-2.585 2.586V3.707l2.585 2.587a.819.819 0 001.158-1.16L6.321 1.148c-.057-.056-.126-.091-.197-.13-.026-.014-.045-.037-.072-.048-.033-.013-.069-.01-.106-.02a.802.802 0 00-.779.198L1.184 5.132a.82.82 0 101.156 1.16l2.586-2.587v21.24L2.34 22.36a.814.814 0 00-1.156-.002.815.815 0 000 1.158l3.983 3.985a.8.8 0 00.779.199c.037-.01.073-.008.106-.02.027-.011.046-.036.072-.047.071-.04.14-.075.197-.132l3.984-3.986a.816.816 0 00-.001-1.157.817.817 0 00-1.157 0M30.551 10.989H13.317a.82.82 0 000 1.639h17.234a.82.82 0 000-1.64M30.551 16.024H13.317a.82.82 0 000 1.639h17.234a.819.819 0 000-1.64M30.551 5.954H13.317a.82.82 0 00-.819.82.82.82 0 00.82.817H30.55a.818.818 0 000-1.637M30.551 21.059H13.317a.82.82 0 000 1.638h17.234a.819.819 0 000-1.638" />\n        </g>\n      </svg>\n\n      \x3c!-- <svg width="32" height="28" xmlns="http://www.w3.org/2000/svg">\n          <g id="line-height" fill="var(--svgFill)" fill-rule="evenodd">\n            <path\n              d="M30.551.92H13.317a.82.82 0 000 1.639h17.234a.819.819 0 000-1.64M30.551 26.095H13.317a.818.818 0 100 1.634h17.234a.817.817 0 100-1.634M9.147 22.359l-2.585 2.586V3.707l2.585 2.587a.819.819 0 001.158-1.16L6.321 1.148c-.057-.056-.126-.091-.197-.13-.026-.014-.045-.037-.072-.048-.033-.013-.069-.01-.106-.02a.802.802 0 00-.779.198L1.184 5.132a.82.82 0 101.156 1.16l2.586-2.587v21.24L2.34 22.36a.814.814 0 00-1.156-.002.815.815 0 000 1.158l3.983 3.985a.8.8 0 00.779.199c.037-.01.073-.008.106-.02.027-.011.046-.036.072-.047.071-.04.14-.075.197-.132l3.984-3.986a.816.816 0 00-.001-1.157.817.817 0 00-1.157 0M30.551 10.989H13.317a.82.82 0 000 1.639h17.234a.82.82 0 000-1.64M30.551 16.024H13.317a.82.82 0 000 1.639h17.234a.819.819 0 000-1.64M30.551 5.954H13.317a.82.82 0 00-.819.82.82.82 0 00.82.817H30.55a.818.818 0 000-1.637M30.551 21.059H13.317a.82.82 0 000 1.638h17.234a.819.819 0 000-1.638"\n            />\n          </g>\n        </svg> --\x3e\n      <form action="#" data-setting-name="line-height">\n        <button type="reset" class="omo-widget__reset">\n          <svg viewBox="0 0 25 25">\n            <path id="reset" fill="var(--svgFill)"\n              d="M6 3C5.3 2.3 4.6 1.5 3.7.6c-.2 2.5-.4 4.9-.7 7.3 2.6.1 5 .2 7.7.2-.9-1-1.7-1.8-2.5-2.7 2.6-1.4 6.5-.7 8.9 1.6 2.7 2.5 3.4 6.5 1.9 9.7-1.6 3.2-5.2 5.1-8.7 4.6-3.1-.5-6.8-3.1-7.1-8.2h-3c-.3 3.5 2.1 8.2 6.4 10.2 4.6 2.2 10.3 1 13.6-2.8 3.4-4.1 3.7-9.7.6-14C18.3 2.8 12.5-.2 6 3z"\n              fill-rule="nonzero" />\n          </svg>\n          \x3c!-- <svg width="23" height="25" xmlns="http://www.w3.org/2000/svg">\n              <path\n                id="reset"\n                fill="var(--svgFill)"\n                d="M6 3C5.3 2.3 4.6 1.5 3.7.6c-.2 2.5-.4 4.9-.7 7.3 2.6.1 5 .2 7.7.2-.9-1-1.7-1.8-2.5-2.7 2.6-1.4 6.5-.7 8.9 1.6 2.7 2.5 3.4 6.5 1.9 9.7-1.6 3.2-5.2 5.1-8.7 4.6-3.1-.5-6.8-3.1-7.1-8.2h-3c-.3 3.5 2.1 8.2 6.4 10.2 4.6 2.2 10.3 1 13.6-2.8 3.4-4.1 3.7-9.7.6-14C18.3 2.8 12.5-.2 6 3z"\n                fill-rule="nonzero"\n              />\n            </svg> --\x3e\n        </button>\n        <button type="button" tabindex="-1" class="omo-widget__add">+</button>\n        <button type="button" tabindex="-1" class="omo-widget__substract">\n          -\n        </button>\n        <input id="totem_bheight" type="number" class="omo-widget__option-value" value="0" min="1" max="4"\n          name="totem_bheight" />\n      </form>\n    </fieldset>\n    <fieldset id="selectedBackround" data-setting-name="background">\n      <legend>Background</legend>\n      <input type="radio" class="omo-widget__toggle-options" aria-selected="false" name="option-opened" value="4"\n        title="Background" />\n      <form action="#">\n        <button type="reset" class="omo-widget__reset">\n          <svg viewBox="0 0 25 25">\n            <path id="reset" fill="var(--svgFill)"\n              d="M6 3C5.3 2.3 4.6 1.5 3.7.6c-.2 2.5-.4 4.9-.7 7.3 2.6.1 5 .2 7.7.2-.9-1-1.7-1.8-2.5-2.7 2.6-1.4 6.5-.7 8.9 1.6 2.7 2.5 3.4 6.5 1.9 9.7-1.6 3.2-5.2 5.1-8.7 4.6-3.1-.5-6.8-3.1-7.1-8.2h-3c-.3 3.5 2.1 8.2 6.4 10.2 4.6 2.2 10.3 1 13.6-2.8 3.4-4.1 3.7-9.7.6-14C18.3 2.8 12.5-.2 6 3z"\n              fill-rule="nonzero" />\n          </svg>\n        </button>\n        <input class="omo-widget__background-choice" type="radio" name="background" required value="0" />\n        <input class="omo-widget__background-choice" type="radio" name="background" required value="1" />\n        <input class="omo-widget__background-choice" type="radio" name="background" required value="2" />\n        <input class="omo-widget__background-choice" type="radio" name="background" required value="3" />\n        <input class="omo-widget__background-choice" type="radio" name="background" required value="4" />\n        <input class="omo-widget__background-choice" type="radio" name="background" required value="5" />\n      </form>\n    </fieldset>\n    <fieldset class="omo-widget__power-toggle-wrap" data-setting-name="widget-active">\n      <input id="applyOverides" class="omo-widget__power-toggle" type="checkbox" title="Toggle options" />\n      <svg viewBox="0 0 24 29">\n        <g id="power" fill="var(--svgFill)" fill-rule="evenodd">\n          <path\n            d="M20.397 7.824c6.246 6.773 1.866 17.455-7.376 17.809-9.519.363-13.263-11.426-7.376-17.81 1.09-1.181-.673-2.954-1.768-1.767-7.736 8.387-2.297 21.639 9.144 22.077 11.777.449 16.435-14.17 9.144-22.077-1.096-1.187-2.86.586-1.768 1.768" />\n          <path d="M11.77 1.718v10.445c0 1.612 2.5 1.612 2.5 0V1.718c0-1.613-2.5-1.613-2.5 0" />\n        </g>\n      </svg>\n    </fieldset>\n    <div class="omo-widget__link-wrap">\n      <a href="https://omolab.com/" target="_blank" data-setting-name="widget-info" title="Find out more">\n        <svg viewBox="0 0 10 31">\n          <g id="info" fill="var(--svgFill)" fill-rule="evenodd">\n            <path\n              d="M9.535 17.468a4.442 4.442 0 00-4.443-4.44 4.443 4.443 0 00-4.445 4.44v8.89a4.443 4.443 0 004.445 4.44 4.442 4.442 0 004.443-4.44v-8.89zM9.535 5.242A4.443 4.443 0 11.648 5.24a4.443 4.443 0 018.887 0" />\n          </g>\n        </svg>\n      </a>\n    </div>\n  </div>\n  \x3c!-- <script src="./totemWidget.js"><\/script>\n    <script>\n      initOmoWidgetControls();\n    <\/script> --\x3e\n</body>\n\n</html>'},function(e,n,o){(function(n,t){var a;
/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   3.3.1
 */a=function(){"use strict";function e(e){return"function"==typeof e}var a=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},r=0,i=void 0,s=void 0,c=function(e,n){g[r]=e,g[r+1]=n,2===(r+=2)&&(s?s(h):b())},f="undefined"!=typeof window?window:void 0,l=f||{},u=l.MutationObserver||l.WebKitMutationObserver,p="undefined"==typeof self&&void 0!==n&&"[object process]"==={}.toString.call(n),m="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function d(){var e=setTimeout;return function(){return e(h,1)}}var g=new Array(1e3);function h(){for(var e=0;e<r;e+=2)(0,g[e])(g[e+1]),g[e]=void 0,g[e+1]=void 0;r=0}var w,v,y,_,b=void 0;function T(e,n){var o=arguments,t=this,a=new this.constructor(E);void 0===a[k]&&Y(a);var r,i=t._state;return i?(r=o[i-1],c((function(){return j(i,a,r,t._result)}))):N(t,a,e,n),a}function O(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var n=new this(E);return F(n,e),n}p?b=function(){return n.nextTick(h)}:u?(v=0,y=new u(h),_=document.createTextNode(""),y.observe(_,{characterData:!0}),b=function(){_.data=v=++v%2}):m?((w=new MessageChannel).port1.onmessage=h,b=function(){return w.port2.postMessage(0)}):b=void 0===f?function(){try{var e=o(15);return i=e.runOnLoop||e.runOnContext,function(){i(h)}}catch(e){return d()}}():d();var k=Math.random().toString(36).substring(16);function E(){}var B=void 0,S=1,x=2,A=new H;function C(e){try{return e.then}catch(e){return A.error=e,A}}function L(n,o,t){o.constructor===n.constructor&&t===T&&o.constructor.resolve===O?function(e,n){n._state===S?D(e,n._result):n._state===x?z(e,n._result):N(n,void 0,(function(n){return F(e,n)}),(function(n){return z(e,n)}))}(n,o):t===A?z(n,A.error):void 0===t?D(n,o):e(t)?function(e,n,o){c((function(e){var t=!1,a=function(e,n,o,t){try{e.call(n,o,t)}catch(e){return e}}(o,n,(function(o){t||(t=!0,n!==o?F(e,o):D(e,o))}),(function(n){t||(t=!0,z(e,n))}),e._label);!t&&a&&(t=!0,z(e,a))}),e)}(n,o,t):D(n,o)}function F(e,n){var o;e===n?z(e,new TypeError("You cannot resolve a promise with itself")):"function"==typeof(o=n)||"object"==typeof o&&null!==o?L(e,n,C(n)):D(e,n)}function M(e){e._onerror&&e._onerror(e._result),R(e)}function D(e,n){e._state===B&&(e._result=n,e._state=S,0!==e._subscribers.length&&c(R,e))}function z(e,n){e._state===B&&(e._state=x,e._result=n,c(M,e))}function N(e,n,o,t){var a=e._subscribers,r=a.length;e._onerror=null,a[r]=n,a[r+S]=o,a[r+x]=t,0===r&&e._state&&c(R,e)}function R(e){var n=e._subscribers,o=e._state;if(0!==n.length){for(var t=void 0,a=void 0,r=e._result,i=0;i<n.length;i+=3)t=n[i],a=n[i+o],t?j(o,t,a,r):a(r);e._subscribers.length=0}}function H(){this.error=null}var I=new H;function j(n,o,t,a){var r=e(t),i=void 0,s=void 0,c=void 0,f=void 0;if(r){if((i=function(e,n){try{return e(n)}catch(e){return I.error=e,I}}(t,a))===I?(f=!0,s=i.error,i=null):c=!0,o===i)return void z(o,new TypeError("A promises callback cannot return that same promise."))}else i=a,c=!0;o._state!==B||(r&&c?F(o,i):f?z(o,s):n===S?D(o,i):n===x&&z(o,i))}var U=0;function Y(e){e[k]=U++,e._state=void 0,e._result=void 0,e._subscribers=[]}function q(e,n){this._instanceConstructor=e,this.promise=new e(E),this.promise[k]||Y(this.promise),a(n)?(this._input=n,this.length=n.length,this._remaining=n.length,this._result=new Array(this.length),0===this.length?D(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&D(this.promise,this._result))):z(this.promise,new Error("Array Methods must be provided an Array"))}function G(e){this[k]=U++,this._result=this._state=void 0,this._subscribers=[],E!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof G?function(e,n){try{n((function(n){F(e,n)}),(function(n){z(e,n)}))}catch(n){z(e,n)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}function P(){var e=void 0;if(void 0!==t)e=t;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var n=e.Promise;if(n){var o=null;try{o=Object.prototype.toString.call(n.resolve())}catch(e){}if("[object Promise]"===o&&!n.cast)return}e.Promise=G}return q.prototype._enumerate=function(){for(var e=this.length,n=this._input,o=0;this._state===B&&o<e;o++)this._eachEntry(n[o],o)},q.prototype._eachEntry=function(e,n){var o=this._instanceConstructor,t=o.resolve;if(t===O){var a=C(e);if(a===T&&e._state!==B)this._settledAt(e._state,n,e._result);else if("function"!=typeof a)this._remaining--,this._result[n]=e;else if(o===G){var r=new o(E);L(r,e,a),this._willSettleAt(r,n)}else this._willSettleAt(new o((function(n){return n(e)})),n)}else this._willSettleAt(t(e),n)},q.prototype._settledAt=function(e,n,o){var t=this.promise;t._state===B&&(this._remaining--,e===x?z(t,o):this._result[n]=o),0===this._remaining&&D(t,this._result)},q.prototype._willSettleAt=function(e,n){var o=this;N(e,void 0,(function(e){return o._settledAt(S,n,e)}),(function(e){return o._settledAt(x,n,e)}))},G.all=function(e){return new q(this,e).promise},G.race=function(e){var n=this;return a(e)?new n((function(o,t){for(var a=e.length,r=0;r<a;r++)n.resolve(e[r]).then(o,t)})):new n((function(e,n){return n(new TypeError("You must pass an array to race."))}))},G.resolve=O,G.reject=function(e){var n=new this(E);return z(n,e),n},G._setScheduler=function(e){s=e},G._setAsap=function(e){c=e},G._asap=c,G.prototype={constructor:G,then:T,catch:function(e){return this.then(null,e)}},P(),G.polyfill=P,G.Promise=G,G},e.exports=a()}).call(this,o(3),o(14))},function(e,n){var o;o=function(){return this}();try{o=o||new Function("return this")()}catch(e){"object"==typeof window&&(o=window)}e.exports=o},function(e,n){},function(e,n,o){e.exports=o(17)},function(e,n,o){"use strict";(function(n){var t=o(1),a=o(4),r=o(18),i=o(10);function s(e){var n=new r(e),o=a(r.prototype.request,n);return t.extend(o,r.prototype,n),t.extend(o,n),o}var c=s(o(7));c.Axios=r,c.create=function(e){return s(i(c.defaults,e))},c.Cancel=o(11),c.CancelToken=o(31),c.isCancel=o(6),c.all=function(e){return n.all(e)},c.spread=o(32),e.exports=c,e.exports.default=c}).call(this,o(2))},function(e,n,o){"use strict";(function(n){var t=o(1),a=o(5),r=o(19),i=o(20),s=o(10);function c(e){this.defaults=e,this.interceptors={request:new r,response:new r}}c.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=s(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var o=[i,void 0],t=n.resolve(e);for(this.interceptors.request.forEach((function(e){o.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){o.push(e.fulfilled,e.rejected)}));o.length;)t=t.then(o.shift(),o.shift());return t},c.prototype.getUri=function(e){return e=s(this.defaults,e),a(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},t.forEach(["delete","get","head","options"],(function(e){c.prototype[e]=function(n,o){return this.request(t.merge(o||{},{method:e,url:n}))}})),t.forEach(["post","put","patch"],(function(e){c.prototype[e]=function(n,o,a){return this.request(t.merge(a||{},{method:e,url:n,data:o}))}})),e.exports=c}).call(this,o(2))},function(e,n,o){"use strict";var t=o(1);function a(){this.handlers=[]}a.prototype.use=function(e,n){return this.handlers.push({fulfilled:e,rejected:n}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){t.forEach(this.handlers,(function(n){null!==n&&e(n)}))},e.exports=a},function(e,n,o){"use strict";(function(n){var t=o(1),a=o(21),r=o(6),i=o(7);function s(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return s(e),e.headers=e.headers||{},e.data=a(e.data,e.headers,e.transformRequest),e.headers=t.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),t.forEach(["delete","get","head","post","put","patch","common"],(function(n){delete e.headers[n]})),(e.adapter||i.adapter)(e).then((function(n){return s(e),n.data=a(n.data,n.headers,e.transformResponse),n}),(function(o){return r(o)||(s(e),o&&o.response&&(o.response.data=a(o.response.data,o.response.headers,e.transformResponse))),n.reject(o)}))}}).call(this,o(2))},function(e,n,o){"use strict";var t=o(1);e.exports=function(e,n,o){return t.forEach(o,(function(o){e=o(e,n)})),e}},function(e,n,o){"use strict";var t=o(1);e.exports=function(e,n){t.forEach(e,(function(o,t){t!==n&&t.toUpperCase()===n.toUpperCase()&&(e[n]=o,delete e[t])}))}},function(e,n,o){"use strict";var t=o(9);e.exports=function(e,n,o){var a=o.config.validateStatus;!a||a(o.status)?e(o):n(t("Request failed with status code "+o.status,o.config,null,o.request,o))}},function(e,n,o){"use strict";e.exports=function(e,n,o,t,a){return e.config=n,o&&(e.code=o),e.request=t,e.response=a,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,n,o){"use strict";var t=o(26),a=o(27);e.exports=function(e,n){return e&&!t(n)?a(e,n):n}},function(e,n,o){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,n,o){"use strict";e.exports=function(e,n){return n?e.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):e}},function(e,n,o){"use strict";var t=o(1),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var n,o,r,i={};return e?(t.forEach(e.split("\n"),(function(e){if(r=e.indexOf(":"),n=t.trim(e.substr(0,r)).toLowerCase(),o=t.trim(e.substr(r+1)),n){if(i[n]&&a.indexOf(n)>=0)return;i[n]="set-cookie"===n?(i[n]?i[n]:[]).concat([o]):i[n]?i[n]+", "+o:o}})),i):i}},function(e,n,o){"use strict";var t=o(1);e.exports=t.isStandardBrowserEnv()?function(){var e,n=/(msie|trident)/i.test(navigator.userAgent),o=document.createElement("a");function a(e){var t=e;return n&&(o.setAttribute("href",t),t=o.href),o.setAttribute("href",t),{href:o.href,protocol:o.protocol?o.protocol.replace(/:$/,""):"",host:o.host,search:o.search?o.search.replace(/^\?/,""):"",hash:o.hash?o.hash.replace(/^#/,""):"",hostname:o.hostname,port:o.port,pathname:"/"===o.pathname.charAt(0)?o.pathname:"/"+o.pathname}}return e=a(window.location.href),function(n){var o=t.isString(n)?a(n):n;return o.protocol===e.protocol&&o.host===e.host}}():function(){return!0}},function(e,n,o){"use strict";var t=o(1);e.exports=t.isStandardBrowserEnv()?{write:function(e,n,o,a,r,i){var s=[];s.push(e+"="+encodeURIComponent(n)),t.isNumber(o)&&s.push("expires="+new Date(o).toGMTString()),t.isString(a)&&s.push("path="+a),t.isString(r)&&s.push("domain="+r),!0===i&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var n=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,n,o){"use strict";(function(n){var t=o(11);function a(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var o;this.promise=new n((function(e){o=e}));var a=this;e((function(e){a.reason||(a.reason=new t(e),o(a.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var e;return{token:new a((function(n){e=n})),cancel:e}},e.exports=a}).call(this,o(2))},function(e,n,o){"use strict";e.exports=function(e){return function(n){return e.apply(null,n)}}},function(e,n,o){var t=o(34);"string"==typeof t&&(t=[[e.i,t,""]]);var a={hmr:!0,transform:void 0};o(36)(t,a);t.locals&&(e.exports=t.locals)},function(e,n,o){(e.exports=o(35)(!1)).push([e.i,'@font-face {\n  font-family: OmoTypeA-BlackOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BlackOne.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BlackTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BlackTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BlackThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BlackThree.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BlackFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BlackFour.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BoldOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BoldOne.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BoldTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BoldTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BoldThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BoldThree.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BoldFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BoldFour.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BookOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BookOne.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BookTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BookTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BookThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BookThree.woff");\n}\n@font-face {\n  font-family: OmoTypeA-BookFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-BookFour.woff");\n}\n@font-face {\n  font-family: OmoTypeA-LightOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-LightOne.woff");\n}\n@font-face {\n  font-family: OmoTypeA-LightTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-LightTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeA-LightThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-LightThree.woff");\n}\n@font-face {\n  font-family: OmoTypeA-LightFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-LightFour.woff");\n}\n@font-face {\n  font-family: OmoTypeA-RegularOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-RegularOne.woff");\n}\n@font-face {\n  font-family: OmoTypeA-RegularTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-RegularTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeA-RegularThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-RegularThree.woff");\n}\n@font-face {\n  font-family: OmoTypeA-RegularFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-RegularFour.woff");\n}\n@font-face {\n  font-family: OmoTypeA-MediumOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-MediumOne.woff");\n}\n@font-face {\n  font-family: OmoTypeA-MediumTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-MediumTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeA-MediumThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-MediumThree.woff");\n}\n@font-face {\n  font-family: OmoTypeA-MediumFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-MediumFour.woff");\n}\n\n@font-face {\n  font-family: OmoTypeB-BlackOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BlackOne.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BlackTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BlackTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BlackThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BlackThree.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BlackFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BlackFour.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BoldOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BoldOne.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BoldTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BoldTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BoldThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BoldThree.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BoldFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BoldFour.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BookOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BookOne.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BookTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BookTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BookThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BookThree.woff");\n}\n@font-face {\n  font-family: OmoTypeB-BookFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-BookFour.woff");\n}\n@font-face {\n  font-family: OmoTypeB-LightOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-LightOne.woff");\n}\n@font-face {\n  font-family: OmoTypeB-LightTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-LightTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeB-LightThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-LightThree.woff");\n}\n@font-face {\n  font-family: OmoTypeB-LightFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-LightFour.woff");\n}\n@font-face {\n  font-family: OmoTypeB-RegularOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-RegularOne.woff");\n}\n@font-face {\n  font-family: OmoTypeB-RegularTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-RegularTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeB-RegularThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-RegularThree.woff");\n}\n@font-face {\n  font-family: OmoTypeB-RegularFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-RegularFour.woff");\n}\n@font-face {\n  font-family: OmoTypeB-MediumOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-MediumOne.woff");\n}\n@font-face {\n  font-family: OmoTypeB-MediumTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-MediumTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeB-MediumThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-MediumThree.woff");\n}\n@font-face {\n  font-family: OmoTypeB-MediumFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-MediumFour.woff");\n}\n\n@font-face {\n  font-family: OmoTypeC-BlackOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BlackOne.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BlackTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BlackTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BlackThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BlackThree.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BlackFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BlackFour.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BoldOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BoldOne.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BoldTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BoldTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BoldThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BoldThree.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BoldFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BoldFour.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BookOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BookOne.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BookTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BookTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BookThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BookThree.woff");\n}\n@font-face {\n  font-family: OmoTypeC-BookFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-BookFour.woff");\n}\n@font-face {\n  font-family: OmoTypeC-LightOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-LightOne.woff");\n}\n@font-face {\n  font-family: OmoTypeC-LightTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-LightTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeC-LightThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-LightThree.woff");\n}\n@font-face {\n  font-family: OmoTypeC-LightFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-LightFour.woff");\n}\n@font-face {\n  font-family: OmoTypeC-RegularOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-RegularOne.woff");\n}\n@font-face {\n  font-family: OmoTypeC-RegularTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-RegularTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeC-RegularThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-RegularThree.woff");\n}\n@font-face {\n  font-family: OmoTypeC-RegularFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-RegularFour.woff");\n}\n@font-face {\n  font-family: OmoTypeC-MediumOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-MediumOne.woff");\n}\n@font-face {\n  font-family: OmoTypeC-MediumTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-MediumTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeC-MediumThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-MediumThree.woff");\n}\n@font-face {\n  font-family: OmoTypeC-MediumFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-MediumFour.woff");\n}\n\n@font-face {\n  font-family: OmoTypeD-BlackOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BlackOne.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BlackTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BlackTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BlackThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BlackThree.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BlackFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BlackFour.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BoldOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BoldOne.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BoldTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BoldTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BoldThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BoldThree.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BoldFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BoldFour.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BookOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BookOne.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BookTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BookTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BookThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BookThree.woff");\n}\n@font-face {\n  font-family: OmoTypeD-BookFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-BookFour.woff");\n}\n@font-face {\n  font-family: OmoTypeD-LightOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-LightOne.woff");\n}\n@font-face {\n  font-family: OmoTypeD-LightTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-LightTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeD-LightThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-LightThree.woff");\n}\n@font-face {\n  font-family: OmoTypeD-LightFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-LightFour.woff");\n}\n@font-face {\n  font-family: OmoTypeD-RegularOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-RegularOne.woff");\n}\n@font-face {\n  font-family: OmoTypeD-RegularTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-RegularTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeD-RegularThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-RegularThree.woff");\n}\n@font-face {\n  font-family: OmoTypeD-RegularFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-RegularFour.woff");\n}\n@font-face {\n  font-family: OmoTypeD-MediumOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-MediumOne.woff");\n}\n@font-face {\n  font-family: OmoTypeD-MediumTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-MediumTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeD-MediumThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-MediumThree.woff");\n}\n@font-face {\n  font-family: OmoTypeD-MediumFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-MediumFour.woff");\n}\n\n@font-face {\n  font-family: OmoTypeE-BlackOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BlackOne.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BlackTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BlackTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BlackThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BlackThree.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BlackFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BlackFour.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BoldOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BoldOne.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BoldTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BoldTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BoldThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BoldThree.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BoldFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BoldFour.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BookOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BookOne.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BookTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BookTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BookThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BookThree.woff");\n}\n@font-face {\n  font-family: OmoTypeE-BookFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-BookFour.woff");\n}\n@font-face {\n  font-family: OmoTypeE-LightOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-LightOne.woff");\n}\n@font-face {\n  font-family: OmoTypeE-LightTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-LightTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeE-LightThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-LightThree.woff");\n}\n@font-face {\n  font-family: OmoTypeE-LightFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-LightFour.woff");\n}\n@font-face {\n  font-family: OmoTypeE-RegularOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-RegularOne.woff");\n}\n@font-face {\n  font-family: OmoTypeE-RegularTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-RegularTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeE-RegularThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-RegularThree.woff");\n}\n@font-face {\n  font-family: OmoTypeE-RegularFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-RegularFour.woff");\n}\n@font-face {\n  font-family: OmoTypeE-MediumOne;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-MediumOne.woff");\n}\n@font-face {\n  font-family: OmoTypeE-MediumTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-MediumTwo.woff");\n}\n@font-face {\n  font-family: OmoTypeE-MediumThree;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-MediumThree.woff");\n}\n@font-face {\n  font-family: OmoTypeE-MediumFour;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-MediumFour.woff");\n}\n\n@font-face {\n  font-family: OmoTypeA-;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeA-RegularOne.woff");\n}\n\n@font-face {\n  font-family: OmoTypeB-;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeB-RegularOne.woff");\n}\n@font-face {\n  font-family: OmoTypeC-;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeC-RegularOne.woff");\n}\n@font-face {\n  font-family: OmoTypeD-;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeD-RegularOne.woff");\n}\n@font-face {\n  font-family: OmoTypeE-;\n  src: url("https://omo-lab.herokuapp.com/fonts/woff/OmoTypeE-RegularOne.woff");\n}\n@font-face {\n  font-family: OmoType-RegularStdTwo;\n  src: url("https://omo-lab.herokuapp.com/fonts/std/OmoType-RegularStdTwo.ttf");\n}\n\n.omo-widget {\n  --primary: #eb8b2d;\n  --secondary: #2093aa;\n  --svgFill: white;\n  --size: 46px;\n  --margin-size: 2px;\n  --sizeAdjusted: calc(var(--size) + 2 * var(--margin-size));\n  --animationSpeed: 0.15s;\n  position: fixed;\n  z-index: 9999999999999 !important;\n  bottom: calc(var(--size) * 0.5);\n  right: calc(var(--size) * 0.5);\n  background-color: black;\n  font-size: 0;\n  border-radius: calc(var(--size) / 2 + var(--margin-size));\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: reverse;\n  -ms-flex-direction: column-reverse;\n  flex-direction: column-reverse;\n}\n\n@media (min-width: 768px) {\n  .omo-widget {\n    --size: 50px;\n    --margin-size: 2px;\n    top: calc(var(--size) * 0.5);\n    bottom: auto;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n  }\n}\n\n.omo-widget * {\n  margin: 0;\n  padding: 0;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n.omo-widget *:focus {\n  outline: none;\n  -webkit-box-shadow: 0 0 0px var(--margin-size) var(--secondary);\n  box-shadow: 0 0 0px var(--margin-size) var(--secondary);\n}\n\n.omo-widget__main-toggle {\n  border: calc(5 * var(--margin-size)) solid black !important;\n  background: white !important;\n}\n\n.omo-widget__main-toggle ~ * {\n  -webkit-transition: height var(--animationSpeed) ease var(--animationSpeed),\n    opacity var(--animationSpeed) ease,\n    -webkit-transform var(--animationSpeed) ease;\n  transition: height var(--animationSpeed) ease var(--animationSpeed),\n    opacity var(--animationSpeed) ease,\n    -webkit-transform var(--animationSpeed) ease;\n  transition: height var(--animationSpeed) ease var(--animationSpeed),\n    transform var(--animationSpeed) ease, opacity var(--animationSpeed) ease;\n  transition: height var(--animationSpeed) ease var(--animationSpeed),\n    transform var(--animationSpeed) ease, opacity var(--animationSpeed) ease,\n    -webkit-transform var(--animationSpeed) ease;\n  -webkit-transform: scale(0.8);\n  transform: scale(0.8);\n  height: 0;\n  opacity: 0;\n  z-index: 2;\n  pointer-events: none;\n}\n\n.omo-widget__main-toggle:checked ~ * {\n  -webkit-transition: height var(--animationSpeed) ease,\n    opacity var(--animationSpeed) ease var(--animationSpeed),\n    -webkit-transform var(--animationSpeed) ease var(--animationSpeed);\n  transition: height var(--animationSpeed) ease,\n    opacity var(--animationSpeed) ease var(--animationSpeed),\n    -webkit-transform var(--animationSpeed) ease var(--animationSpeed);\n  transition: height var(--animationSpeed) ease,\n    transform var(--animationSpeed) ease var(--animationSpeed),\n    opacity var(--animationSpeed) ease var(--animationSpeed);\n  transition: height var(--animationSpeed) ease,\n    transform var(--animationSpeed) ease var(--animationSpeed),\n    opacity var(--animationSpeed) ease var(--animationSpeed),\n    -webkit-transform var(--animationSpeed) ease var(--animationSpeed);\n  height: var(--sizeAdjusted);\n  opacity: 1;\n  -webkit-transform: scale(1);\n  transform: scale(1);\n  pointer-events: all;\n}\n\n.omo-widget__main-toggle:checked ~ * .omo-widget__link-wrap {\n  height: calc(var(--size) + var(--margin-size));\n}\n\n.omo-widget__main-toggle:checked ~ * .omo-widget__link-wrap a {\n  margin-bottom: 0;\n}\n\n.omo-widget__power-toggle-wrap {\n  pointer-events: none !important;\n}\n\n.omo-widget__power-toggle-wrap > * {\n  opacity: 0.5;\n}\n\n.omo-widget.has-changes\n  .omo-widget__main-toggle:checked\n  ~ .omo-widget__power-toggle-wrap {\n  pointer-events: all !important;\n}\n\n.omo-widget.has-changes\n  .omo-widget__main-toggle:checked\n  ~ .omo-widget__power-toggle-wrap\n  > * {\n  opacity: 1;\n}\n\n.omo-widget.has-changes\n  .omo-widget__main-toggle:checked\n  ~ .omo-widget__power-toggle-wrap\n  .omo-widget__power-toggle {\n  background: var(--primary);\n}\n\n.omo-widget.has-changes .omo-widget__main-toggle {\n  background: var(--primary) !important;\n}\n\n.omo-widget.power-off > .omo-widget__main-toggle {\n  background: white !important;\n}\n\n.omo-widget.power-off\n  > .omo-widget__main-toggle:checked\n  ~ *:not(:nth-last-child(-n + 2)) {\n  opacity: 0.4;\n  pointer-events: none;\n}\n\n.omo-widget.power-off .omo-widget__power {\n  background: black !important;\n}\n\n.omo-widget__add,\n.omo-widget__substract,\n.omo-widget__reset,\n.omo-widget__power-toggle,\n.omo-widget__main-toggle,\n.omo-widget__toggle-options,\n.omo-widget__background-choice,\n.omo-widget__link-wrap a,\n.omo-widget__type-preview {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  display: block;\n  width: var(--size);\n  height: var(--size);\n  margin: var(--margin-size);\n  background: transparent;\n  border: 2px solid white;\n  border-radius: 50%;\n  font-size: 0;\n}\n\n.omo-widget__add:active,\n.omo-widget__add.active,\n.omo-widget__substract:active,\n.omo-widget__substract.active,\n.omo-widget__reset:active,\n.omo-widget__reset.active,\n.omo-widget__power-toggle:active,\n.omo-widget__power-toggle.active,\n.omo-widget__main-toggle:active,\n.omo-widget__main-toggle.active,\n.omo-widget__toggle-options:active,\n.omo-widget__toggle-options.active,\n.omo-widget__background-choice:active,\n.omo-widget__background-choice.active,\n.omo-widget__link-wrap a:active,\n.omo-widget__link-wrap a.active,\n.omo-widget__type-preview:active,\n.omo-widget__type-preview.active {\n  background-color: white;\n}\n\n.omo-widget__add:active + svg,\n.omo-widget__add:active > svg,\n.omo-widget__add.active + svg,\n.omo-widget__add.active > svg,\n.omo-widget__substract:active + svg,\n.omo-widget__substract:active > svg,\n.omo-widget__substract.active + svg,\n.omo-widget__substract.active > svg,\n.omo-widget__reset:active + svg,\n.omo-widget__reset:active > svg,\n.omo-widget__reset.active + svg,\n.omo-widget__reset.active > svg,\n.omo-widget__power-toggle:active + svg,\n.omo-widget__power-toggle:active > svg,\n.omo-widget__power-toggle.active + svg,\n.omo-widget__power-toggle.active > svg,\n.omo-widget__main-toggle:active + svg,\n.omo-widget__main-toggle:active > svg,\n.omo-widget__main-toggle.active + svg,\n.omo-widget__main-toggle.active > svg,\n.omo-widget__toggle-options:active + svg,\n.omo-widget__toggle-options:active > svg,\n.omo-widget__toggle-options.active + svg,\n.omo-widget__toggle-options.active > svg,\n.omo-widget__background-choice:active + svg,\n.omo-widget__background-choice:active > svg,\n.omo-widget__background-choice.active + svg,\n.omo-widget__background-choice.active > svg,\n.omo-widget__link-wrap a:active + svg,\n.omo-widget__link-wrap a:active > svg,\n.omo-widget__link-wrap a.active + svg,\n.omo-widget__link-wrap a.active > svg,\n.omo-widget__type-preview:active + svg,\n.omo-widget__type-preview:active > svg,\n.omo-widget__type-preview.active + svg,\n.omo-widget__type-preview.active > svg {\n  --svgFill: black;\n}\n\n.omo-widget__add:active::after,\n.omo-widget__add.active::after,\n.omo-widget__substract:active::after,\n.omo-widget__substract.active::after,\n.omo-widget__reset:active::after,\n.omo-widget__reset.active::after,\n.omo-widget__power-toggle:active::after,\n.omo-widget__power-toggle.active::after,\n.omo-widget__main-toggle:active::after,\n.omo-widget__main-toggle.active::after,\n.omo-widget__toggle-options:active::after,\n.omo-widget__toggle-options.active::after,\n.omo-widget__background-choice:active::after,\n.omo-widget__background-choice.active::after,\n.omo-widget__link-wrap a:active::after,\n.omo-widget__link-wrap a.active::after,\n.omo-widget__type-preview:active::after,\n.omo-widget__type-preview.active::after {\n  border-color: transparent transparent black transparent;\n}\n\n.omo-widget__link-wrap {\n  margin-bottom: 0;\n  overflow: hidden;\n}\n\n.omo-widget__link-wrap a {\n  background: var(--secondary);\n}\n\n.omo-widget__option-value {\n  display: none;\n}\n\n.omo-widget legend {\n  display: none;\n}\n\n.omo-widget svg {\n  display: block !important;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  pointer-events: none;\n  max-width: 50%;\n  max-height: 50%;\n  height: auto;\n}\n\n.omo-widget form {\n  position: relative;\n}\n\n.omo-widget form:valid::after {\n  content: "";\n  width: var(--size);\n  height: var(--size);\n  background: var(--primary);\n  position: absolute;\n  right: var(--margin-size);\n  top: var(--margin-size);\n  z-index: 323;\n  border-radius: 50%;\n}\n\n.omo-widget form:valid [type="reset"] {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n}\n\n.omo-widget__toggle-options ~ form {\n  -webkit-transition: width var(--animationSpeed) ease var(--animationSpeed);\n  transition: width var(--animationSpeed) ease var(--animationSpeed);\n  width: var(--sizeAdjusted);\n  height: var(--sizeAdjusted);\n  pointer-events: none;\n}\n\n.omo-widget__toggle-options ~ form > * {\n  -webkit-transition: opacity var(--animationSpeed) ease var(--animationSpeed);\n  transition: opacity var(--animationSpeed) ease var(--animationSpeed);\n  opacity: 0;\n}\n\n.omo-widget__toggle-options:checked ~ form {\n  -webkit-transition: width var(--animationSpeed) ease;\n  transition: width var(--animationSpeed) ease;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: calc(3 * var(--sizeAdjusted));\n  pointer-events: all;\n}\n\n.omo-widget__toggle-options:checked ~ form [type="reset"] {\n  -webkit-transition: opacity var(--animationSpeed) ease;\n  transition: opacity var(--animationSpeed) ease;\n  position: absolute;\n  left: 0;\n  opacity: 0;\n}\n\n.omo-widget__toggle-options:checked ~ form:valid {\n  -webkit-transition: width var(--animationSpeed) ease,\n    padding var(--animationSpeed) ease;\n  transition: width var(--animationSpeed) ease,\n    padding var(--animationSpeed) ease;\n  width: calc(4 * var(--sizeAdjusted));\n  padding-left: var(--sizeAdjusted);\n}\n\n.omo-widget__toggle-options:checked ~ form:valid [type="reset"] {\n  -webkit-transition: opacity var(--animationSpeed) ease;\n  transition: opacity var(--animationSpeed) ease;\n  opacity: 1;\n}\n\n.omo-widget__toggle-options:checked ~ form > * {\n  -webkit-transition: opacity var(--animationSpeed) ease var(--animationSpeed);\n  transition: opacity var(--animationSpeed) ease var(--animationSpeed);\n  opacity: 1;\n}\n\n.omo-widget__toggle-options > * {\n  -webkit-transition: opacity var(--animationSpeed) ease;\n  transition: opacity var(--animationSpeed) ease;\n  opacity: 1;\n}\n\n.omo-widget fieldset {\n  border: none;\n  position: relative;\n}\n\n.omo-widget form {\n  position: absolute;\n  top: 0;\n  right: 0;\n  background: black;\n  border-radius: calc(var(--sizeAdjusted) / 2);\n  padding-right: var(--sizeAdjusted);\n  z-index: -1;\n}\n\n.omo-widget [type="reset"] {\n  position: relative;\n}\n\n.omo-widget [type="reset"] svg {\n  width: 70%;\n  --svgFill: white;\n}\n\n.omo-widget [type="reset"]:active svg {\n  --svgFill: black;\n}\n\n.omo-widget__add,\n.omo-widget__substract {\n  position: relative;\n}\n\n.omo-widget__add::after,\n.omo-widget__substract::after {\n  --triangleSize: calc(var(--sizeAdjusted) / 3);\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translate(-50%, 0%) rotate(180deg);\n  transform: translate(-50%, 0%) rotate(180deg);\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 var(--triangleSize) var(--triangleSize) var(--triangleSize);\n  border-color: transparent transparent white transparent;\n}\n\n.omo-widget__add::after {\n  -webkit-transform: translate(-50%, -100%);\n  transform: translate(-50%, -100%);\n}\n\n.omo-widget {\n  --bgColor0: #eff3ee;\n  --bgColor1: #d9d8d8;\n  --bgColor2: #231f20;\n  --bgColor3: #9fb5de;\n  --bgColor4: #b894c4;\n  --bgColor5: #e2b0af;\n}\n\n.omo-widget [data-setting-name="background"] {\n  position: relative;\n  z-index: 1;\n}\n\n.omo-widget [data-setting-name="background"] form {\n  -webkit-transition: all var(--animationSpeed) ease var(--animationSpeed);\n  transition: all var(--animationSpeed) ease var(--animationSpeed);\n  height: calc(var(--sizeAdjusted) * 2 + 20px);\n  bottom: -10px;\n  top: auto;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n}\n\n.omo-widget [data-setting-name="background"] form > * {\n  -webkit-transition: opacity var(--animationSpeed) ease;\n  transition: opacity var(--animationSpeed) ease;\n  opacity: 0 !important;\n}\n\n.omo-widget [data-setting-name="background"] form:valid::after {\n  display: none;\n}\n\n.omo-widget [data-setting-name="background"] .omo-widget__toggle-options {\n  background: white;\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__toggle-options:checked\n  ~ form {\n  -webkit-transition: width var(--animationSpeed) ease;\n  transition: width var(--animationSpeed) ease;\n  width: calc(var(--sizeAdjusted) * 3 + 20px);\n  padding: 10px;\n  border-top-right-radius: var(--sizeAdjusted/2);\n  border-bottom-right-radius: 0px;\n  margin-right: var(--sizeAdjusted);\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__toggle-options:checked\n  ~ form\n  > *:not(.omo-widget__reset) {\n  -webkit-transition: opacity var(--animationSpeed) ease var(--animationSpeed);\n  transition: opacity var(--animationSpeed) ease var(--animationSpeed);\n  opacity: 1 !important;\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__toggle-options:checked\n  ~ form:valid::before {\n  content: "";\n  position: absolute;\n  background: black;\n  width: calc(2 * var(--sizeAdjusted) + 20px);\n  height: calc(var(--sizeAdjusted) + 20px);\n  z-index: -1;\n  top: 0;\n  right: calc(100% - var(--sizeAdjusted) - 20px);\n  border-top-left-radius: calc(var(--sizeAdjusted) + 10px);\n  border-bottom-left-radius: calc(var(--sizeAdjusted) + 10px);\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__toggle-options:checked\n  ~ form:valid\n  .omo-widget__reset {\n  opacity: 1 !important;\n}\n\n.omo-widget [data-setting-name="background"]::after {\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: calc(100% - calc(2 * (var(--margin-size) + 2px)));\n  height: 0;\n  padding-top: calc(50% - 2 * var(--margin-size));\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  border-top: calc(var(--size) / 2) solid white;\n  background: black;\n  pointer-events: none;\n}\n\n.omo-widget [data-setting-name="background"][data-value="0"]::after {\n  background: var(--bgColor0);\n}\n\n.omo-widget [data-setting-name="background"][data-value="1"]::after {\n  background: var(--bgColor1);\n}\n\n.omo-widget [data-setting-name="background"][data-value="2"]::after {\n  background: var(--bgColor2);\n}\n\n.omo-widget [data-setting-name="background"][data-value="3"]::after {\n  background: var(--bgColor3);\n}\n\n.omo-widget [data-setting-name="background"][data-value="4"]::after {\n  background: var(--bgColor4);\n}\n\n.omo-widget [data-setting-name="background"][data-value="5"]::after {\n  background: var(--bgColor5);\n}\n\n.omo-widget [data-setting-name="background"] .omo-widget__reset {\n  position: absolute;\n  right: calc(100% - 10px);\n  background: black;\n  left: auto !important;\n}\n\n.omo-widget [data-setting-name="background"] .omo-widget__reset:active {\n  background: white;\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__background-choice[value="0"] {\n  background: var(--bgColor0) !important;\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__background-choice[value="1"] {\n  background: var(--bgColor1) !important;\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__background-choice[value="2"] {\n  background: var(--bgColor2) !important;\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__background-choice[value="3"] {\n  background: var(--bgColor3) !important;\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__background-choice[value="4"] {\n  background: var(--bgColor4) !important;\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__background-choice[value="5"] {\n  background: var(--bgColor5) !important;\n}\n\n.omo-widget\n  [data-setting-name="background"]\n  .omo-widget__background-choice:checked {\n  border-color: var(--primary);\n}\n\n.omo-widget\n  [data-setting-name="font-type"]\n  .omo-widget__toggle-options:checked\n  ~ form {\n  width: calc(4 * var(--sizeAdjusted));\n}\n\n.omo-widget\n  [data-setting-name="font-type"]\n  .omo-widget__toggle-options:checked\n  ~ form:valid {\n  -webkit-transition: width var(--animationSpeed) ease,\n    padding var(--animationSpeed) ease;\n  transition: width var(--animationSpeed) ease,\n    padding var(--animationSpeed) ease;\n  width: calc(5 * var(--sizeAdjusted));\n  padding-left: var(--sizeAdjusted);\n}\n\n.omo-widget\n  [data-setting-name="font-type"]\n  .omo-widget__toggle-options:checked\n  ~ form:valid\n  [type="reset"] {\n  -webkit-transition: opacity var(--animationSpeed) ease var(--animationSpeed);\n  transition: opacity var(--animationSpeed) ease var(--animationSpeed);\n  opacity: 1;\n}\n\n.omo-widget__type-preview {\n  position: relative;\n  pointer-events: none;\n}\n\n.omo-widget__type-preview svg {\n  display: none !important;\n}\n\n.omo-widget__type-preview:not([data-selected]) svg:nth-child(1),\n.omo-widget__type-preview[data-selected="O"] svg:nth-child(1) {\n  display: block !important;\n}\n\n.omo-widget__type-preview[data-selected="A"] svg:nth-child(2) {\n  display: block !important;\n}\n\n.omo-widget__type-preview[data-selected="B"] svg:nth-child(3) {\n  display: block !important;\n}\n\n.omo-widget__type-preview[data-selected="C"] svg:nth-child(4) {\n  display: block !important;\n}\n\n.omo-widget__type-preview[data-selected="D"] svg:nth-child(5) {\n  display: block !important;\n}\n\n.omo-widget__type-preview[data-selected="E"] svg:nth-child(6) {\n  display: block !important;\n}\n',""])},function(e,n,o){"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var o=function(e,n){var o=e[1]||"",t=e[3];if(!t)return o;if(n&&"function"==typeof btoa){var a=(i=t,s=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(c," */")),r=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot).concat(e," */")}));return[o].concat(r).concat([a]).join("\n")}var i,s,c;return[o].join("\n")}(n,e);return n[2]?"@media ".concat(n[2],"{").concat(o,"}"):o})).join("")},n.i=function(e,o){"string"==typeof e&&(e=[[null,e,""]]);for(var t={},a=0;a<this.length;a++){var r=this[a][0];null!=r&&(t[r]=!0)}for(var i=0;i<e.length;i++){var s=e[i];null!=s[0]&&t[s[0]]||(o&&!s[2]?s[2]=o:o&&(s[2]="(".concat(s[2],") and (").concat(o,")")),n.push(s))}},n}},function(e,n,o){var t,a,r={},i=(t=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===a&&(a=t.apply(this,arguments)),a}),s=function(e){var n={};return function(o){if(void 0===n[o]){var t=e.call(this,o);if(t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[o]=t}return n[o]}}((function(e){return document.querySelector(e)})),c=null,f=0,l=[],u=o(37);function p(e,n){for(var o=0;o<e.length;o++){var t=e[o],a=r[t.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](t.parts[i]);for(;i<t.parts.length;i++)a.parts.push(v(t.parts[i],n))}else{var s=[];for(i=0;i<t.parts.length;i++)s.push(v(t.parts[i],n));r[t.id]={id:t.id,refs:1,parts:s}}}}function m(e,n){for(var o=[],t={},a=0;a<e.length;a++){var r=e[a],i=n.base?r[0]+n.base:r[0],s={css:r[1],media:r[2],sourceMap:r[3]};t[i]?t[i].parts.push(s):o.push(t[i]={id:i,parts:[s]})}return o}function d(e,n){var o=s(e.insertInto);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var t=l[l.length-1];if("top"===e.insertAt)t?t.nextSibling?o.insertBefore(n,t.nextSibling):o.appendChild(n):o.insertBefore(n,o.firstChild),l.push(n);else if("bottom"===e.insertAt)o.appendChild(n);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var a=s(e.insertInto+" "+e.insertAt.before);o.insertBefore(n,a)}}function g(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var n=l.indexOf(e);n>=0&&l.splice(n,1)}function h(e){var n=document.createElement("style");return e.attrs.type="text/css",w(n,e.attrs),d(e,n),n}function w(e,n){Object.keys(n).forEach((function(o){e.setAttribute(o,n[o])}))}function v(e,n){var o,t,a,r;if(n.transform&&e.css){if(!(r=n.transform(e.css)))return function(){};e.css=r}if(n.singleton){var i=f++;o=c||(c=h(n)),t=b.bind(null,o,i,!1),a=b.bind(null,o,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(o=function(e){var n=document.createElement("link");return e.attrs.type="text/css",e.attrs.rel="stylesheet",w(n,e.attrs),d(e,n),n}(n),t=O.bind(null,o,n),a=function(){g(o),o.href&&URL.revokeObjectURL(o.href)}):(o=h(n),t=T.bind(null,o),a=function(){g(o)});return t(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t(e=n)}else a()}}e.exports=function(e,n){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(n=n||{}).attrs="object"==typeof n.attrs?n.attrs:{},n.singleton||"boolean"==typeof n.singleton||(n.singleton=i()),n.insertInto||(n.insertInto="head"),n.insertAt||(n.insertAt="bottom");var o=m(e,n);return p(o,n),function(e){for(var t=[],a=0;a<o.length;a++){var i=o[a];(s=r[i.id]).refs--,t.push(s)}e&&p(m(e,n),n);for(a=0;a<t.length;a++){var s;if(0===(s=t[a]).refs){for(var c=0;c<s.parts.length;c++)s.parts[c]();delete r[s.id]}}}};var y,_=(y=[],function(e,n){return y[e]=n,y.filter(Boolean).join("\n")});function b(e,n,o,t){var a=o?"":t.css;if(e.styleSheet)e.styleSheet.cssText=_(n,a);else{var r=document.createTextNode(a),i=e.childNodes;i[n]&&e.removeChild(i[n]),i.length?e.insertBefore(r,i[n]):e.appendChild(r)}}function T(e,n){var o=n.css,t=n.media;if(t&&e.setAttribute("media",t),e.styleSheet)e.styleSheet.cssText=o;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(o))}}function O(e,n,o){var t=o.css,a=o.sourceMap,r=void 0===n.convertToAbsoluteUrls&&a;(n.convertToAbsoluteUrls||r)&&(t=u(t)),a&&(t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */");var i=new Blob([t],{type:"text/css"}),s=e.href;e.href=URL.createObjectURL(i),s&&URL.revokeObjectURL(s)}},function(e,n){e.exports=function(e){var n="undefined"!=typeof window&&window.location;if(!n)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var o=n.protocol+"//"+n.host,t=o+n.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,n){var a,r=n.trim().replace(/^"(.*)"$/,(function(e,n){return n})).replace(/^'(.*)'$/,(function(e,n){return n}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(r)?e:(a=0===r.indexOf("//")?r:0===r.indexOf("/")?o+r:t+r.replace(/^\.\//,""),"url("+JSON.stringify(a)+")")}))}},function(e,n,o){"use strict";o.r(n);var t,a=o(0),r=o.n(a),i=(o(33),o(12)),s=o.n(i),c=[];var f=function(e){return Number(e)-Number(r.a.BODY_FONT_SIZE)},l=[{id:1,value:"500",omoType:"BoldOne"},{id:2,value:"600",omoType:"BookOne"},{id:3,value:"800",omoType:"MediumOne"}],u=function(e){return l.filter((function(n){return n.value===e}))},p=[{id:1,value:1.25},{id:2,value:1.5},{id:3,value:1.75},{id:4,value:2}],m=function(e){return p.filter((function(n){return n.value===e}))},d=[{id:1,value:1.8},{id:2,value:2},{id:3,value:2.2},{id:4,value:2.4}],g=function(e){return d.filter((function(n){return n.value===e}))},h=[{id:1,style:"OmoTypeA",value:"".concat("OmoType","A-")},{id:2,style:"OmoTypeB",value:"".concat("OmoType","B-")},{id:3,style:"OmoTypeC",value:"".concat("OmoType","C-")},{id:4,style:"OmoTypeD",value:"".concat("OmoType","D-")},{id:5,style:"OmoTypeE",value:"".concat("OmoType","E-")}],w=[{id:1,style:"OmoTypeA",value:"".concat("OmoType","A-")},{id:2,style:"OmoTypeB",value:"".concat("OmoType","B-")},{id:3,style:"OmoTypeC",value:"".concat("OmoType","C-")},{id:4,style:"OmoTypeD",value:"".concat("OmoType","D-")},{id:5,style:"OmoTypeE",value:"".concat("OmoType","E-")}],v=function(e){return h.filter((function(n){return n.value===e}))},y=[{id:0,background:"#EFF3EE"},{id:1,background:"#D9D8D8"},{id:2,background:"#231F20"},{id:3,background:"#9FB5DE"},{id:4,background:"#B894C4"},{id:5,background:"#E2B0AF"}],_=function(e){return y.filter((function(n){return n.id===Number(e)}))},b=function(e){return y.filter((function(n){return n.background===e}))},T=function(){var e,n=document.getElementById("applyOverides").checked,o=Number(document.getElementById("totem_bsize").value)+Number(r.a.BODY_FONT_SIZE),t=Number(document.getElementById("totem_bsize").value)+Number(r.a.HEADER_FONT_SIZE),a=(e=document.getElementById("totem_body_ff").value,h.filter((function(n){return n.id===Number(e)}))),i=function(e){return w.filter((function(n){return n.id===Number(e)}))}(document.getElementById("totem_body_ff").value),s=function(e){return l.filter((function(n){return n.id===Number(e)}))}(document.getElementById("totem_font_weight").value),c=function(e){return p.filter((function(n){return n.id===Number(e)}))}(document.getElementById("totem_bspacing").value),f=function(e){return d.filter((function(n){return n.id===Number(e)}))}(document.getElementById("totem_bheight").value),u=document.getElementById("selectedBackround").getAttribute("data-value"),m=_(u);return{checked:n,bodyFontSize:o,headerFontSize:t,bodyFontFamily:a[0].value,headerFontFamily:i[0].value,bodyFontWeight:s[0].value,bodyFontSpacing:c[0].value,bodyLineHeight:f[0].value,bgColor:m[0].background}};function O(){var e=T();console.log(e);var n="transparent"===e.bgColor?"":r.a.setBackGroundColor(r.a.BACKGROUND_COLOR_ELEMENTS,e.bgColor);n+=r.a.setHeaderStyle(r.a.transformHeaderStyles(r.a.HEADER_STYLE_ELEMENTS).join(","),e.headerFontFamily,e.bodyFontWeight,e.headerFontSize,e.bodyFontSpacing,e.bodyLineHeight,e.bgColor),n+=r.a.setBodyTextStyle(r.a.BODY_STYLE,e.bodyFontFamily,e.bodyFontWeight,e.bodyFontSize,e.bodyFontSpacing,e.bodyLineHeight,e.bgColor),n+=r.a.setOmoWidgetStyle(r.a.OMO_WIDGET_ELEMENTS,r.a.omoWidgetStyle);var o=r.a.TWEAK();return console.log(o),n+=o,console.log(n),n}var k=function(e){var n="".concat(r.a.OMO_WIDGET_COOKIE,"_").concat(e),o=JSON.stringify(T());localStorage.setItem("".concat(n),o),console.log("saved:".concat(o))},E=function(e){var n=localStorage.getItem("".concat(r.a.OMO_WIDGET_COOKIE,"_"));(console.log(null===n),null!==n)&&(function(e,n){if(e.checked){var o=document.querySelector("#omo-widget");o.classList.add("has-changes"),o.querySelector(".omo-widget__main-toggle").parentElement.classList.toggle("power-off")}document.getElementById("applyOverides").checked=e.checked,document.getElementById("totem_bsize").value=f(e.bodyFontSize),document.getElementById("totem_body_ff").value=v(e.bodyFontFamily)[0].id,n.updateFont(document.getElementById("totem_body_ff").value),document.getElementById("totem_font_weight").value=u(e.bodyFontWeight)[0].id,document.getElementById("totem_bspacing").value=m(e.bodyFontSpacing)[0].id,document.getElementById("totem_bheight").value=g(e.bodyLineHeight)[0].id,document.getElementById("selectedBackround").setAttribute("data-value",b(e.bgColor)[0].id)}(JSON.parse(n),e),T().checked||(document.querySelector("#omo-widget").classList.add("has-changes"),S()))};function B(){var e=document.getElementsByTagName("head")[0],n=e.getElementsByTagName("style").length;return e.getElementsByTagName("style")[n-1]}var S=function(){var e=document.getElementById("omolab_style_w"),n=B();if(e)return n.innerHTML=O(),void function(e){if(e){var n=document.createTextNode(" "),o=e.style.display;e.appendChild(n),e.style.display="none",setTimeout((function(){e.style.display=o,n.parentNode.removeChild(n)}),0)}}(n);var o=document.createElement("style");o.type="text/css",o.id="omolab_style_w",n=O(),o.styleSheet?o.styleSheet.cssText=n:o.appendChild(document.createTextNode(n)),document.getElementsByTagName("head")[0].appendChild(o)},x=function(){var e=document.getElementById("omolab_style_w"),n=document.getElementsByTagName("head")[0],o=B();console.log(e===o),e===o&&n.removeChild(o)},A=function(e,n){var o=document.createElement("div");for(o.innerHTML=s.a,console.log(e),console.log(n),function(e){var n=e.querySelector("body");n&&!n.classList.contains(r.a.OMOLAB_BODY_CLASS)&&n.classList.add(r.a.OMOLAB_BODY_CLASS)}(document),t=document.getElementsByClassName("omo-widget-container")[0];o.children.length>0;){var a=o.children[0];c.push(a),t.appendChild(a)}var i,f,u,m,g,v,b,T,O,B,A,C,L,F,M,D,z,N,R=(i=document.querySelector("#omo-widget"),f=i.querySelector(".omo-widget__main-toggle"),u=i.querySelectorAll("form"),m=i.querySelectorAll(".omo-widget__toggle-options"),g=i.querySelectorAll(".omo-widget__option-value"),v=i.querySelectorAll('[type="button"]'),b=i.querySelectorAll(".omo-widget__reset"),T=i.querySelector('[data-setting-name="background"] form'),O=T.querySelector(".omo-widget__reset"),B=i.querySelector(".omo-widget__type-preview"),A=i.querySelector(".omo-widget__power-toggle"),C=function(){m.forEach((function(e){e.checked=!1,e.setAttribute("aria-selected","false")}))},L=function(e){B.setAttribute("data-selected",["O","A","B","C","D","E"][e])},F=function(e){var n=e.target.parentElement.querySelector("[type='number'"),o=parseInt(n.value),t=e.target.classList.contains("omo-widget__add");t&&o==n.getAttribute("max")||!t&&0==o||(n.value=t?o+1:o-1,M(),"totem_body_ff"===n.id&&L(n.value))},M=function(){var e=0;[].slice.call(u).forEach((function(n){console.log(n.checkValidity()),n.checkValidity()&&e++})),S(),k(""),i.classList[e>0?"add":"remove"]("has-changes")},D=function(e){var n="ArrowDown"==e.code,o="ArrowUp"==e.code;if("Tab"==e.code)return e.preventDefault(),void e.target.parentElement.parentElement.nextElementSibling.querySelector("[type='radio']").focus();var t=e.target.parentElement.querySelector(".add"),a=e.target.parentElement.querySelector(".substract");L(e.target.value),n?(a.classList.add("active"),setTimeout((function(){a.classList.remove("active")}),20),1==e.target.value&&(e.target.value=0,L(0))):o&&(t.classList.add("active"),setTimeout((function(){t.classList.remove("active")}),20))},z=function(e){"totem_body_ff_reset"===e.target.id&&L(0),C(),setTimeout((function(){M()}))},N=function(e){var n=e.target;if(console.log(e.target),e.code){var o="Tab"==e.code,t="Space"==e.code,a="Enter"==e.code;if(o&&"false"==n.getAttribute("aria-selected"))return e.preventDefault(),void n.parentElement.nextElementSibling.querySelector("[type='radio']").focus();if(!t&&!a)return}"true"==n.getAttribute("aria-selected")?(n.setAttribute("aria-selected","false"),n.checked=!1):(C(),n.setAttribute("aria-selected","true"),n.checked=!0)},f.addEventListener("click",C),A.addEventListener("click",(function(e){console.log(e.target),f.parentElement.classList.toggle("power-off")?x():S(),k(""),C()})),[].slice.call(m).forEach((function(e){e.addEventListener("click",N),e.addEventListener("keydown",N)})),[].slice.call(g).forEach((function(e){e.addEventListener("keydown",D),e.addEventListener("change",M)})),[].slice.call(v).forEach((function(e){e.addEventListener("click",F)})),[].slice.call(b).forEach((function(e){e.addEventListener("click",z)})),T.addEventListener("change",(function(e){T.parentElement.setAttribute("data-value",e.srcElement.value),M()})),O.addEventListener("click",(function(){T.parentElement.setAttribute("data-value",-1)})),{updateFont:function(e){L(e)}});r.a.readConfigurationFromFile(n.config).then((function(e){w.push({id:0,value:r.a.HEADER_FONT_FAMILY}),h.push({id:0,value:r.a.BODY_FONT_FAMILY}),d.push({id:0,value:r.a.BODY_LINE_HEIGHT}),l.push({id:0,value:r.a.BODY_FONT_WEIGHT}),p.push({id:0,value:r.a.BODY_FONT_SPACING}),y.push({id:-1,value:r.a.DEFAULT_BACKGROUND});var n=document.getElementById("selectedBackround");console.log(_(-1)),n.setAttribute("data-value",_(-1)[0].id),E(R)})).catch((function(e){console.log(e),alert(e)}))},C=["init","message"],L={};function F(e,n){if(!e)throw Error("API method required");if(e=e.toLowerCase(),-1===C.indexOf(e))throw Error("Method ".concat(e," is not supported"));switch(console.log("Handling API call ".concat(e),n),e){case"message":A(n,L);break;default:console.warn("No handler defined for ".concat(e))}}function M(e,n){for(var o in n)n.hasOwnProperty(o)&&(e[o]=n[o]);return e}!function(e){console.log("Omo-Widget starting");var n=e[e["Omo-Widget"]],o=n.q;if(o)for(var t=0;t<o.length;t++)"init"===o[t][0].toLowerCase()?L=M(L,o[t][1]):F(o[t][0],o[t][1]);(n=F).configurations=L}(window)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,